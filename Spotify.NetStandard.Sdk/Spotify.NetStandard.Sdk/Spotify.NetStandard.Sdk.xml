<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spotify.NetStandard.Sdk</name>
    </assembly>
    <members>
        <member name="T:Spotify.NetStandard.Sdk.BaseNotifyPropertyChanged">
            <summary>
            Base Notify Property Changed 
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.BaseNotifyPropertyChanged.PropertyChanged">
            <summary>
            Property Changed Event
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.BaseNotifyPropertyChanged.NotifyPropertyChanged(System.String)">
            <summary>
            Notify Property Changed
            </summary>
            <param name="property">Member Name</param>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.BaseSpotifySdkClient">
            <summary>
            Base Spotify Sdk Client
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.BaseSpotifySdkClient.#ctor(Spotify.NetStandard.Sdk.ISpotifySdkClient)">
            <summary>Constructor</summary>
            <param name="client">Spotify Sdk Client</param>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BaseSpotifySdkClient.Client">
            <summary>
            Spotify Sdk Client
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.BaseSpotifySdkClient.Dispose">
            <summary>Dispose</summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.GenericCommand`1">
            <summary>
            Generic Command
            </summary>
            <typeparam name="TAction">Action Type</typeparam>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.GenericCommand`1.CanExecuteChanged">
            <summary>
            Raised when RaiseCanExecuteChanged is called
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.GenericCommand`1.#ctor(System.Action{`0})">
            <summary>
            Creates a new command that can always execute
            </summary>
            <param name="execute">The execution logic</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.GenericCommand`1.#ctor(System.Action{`0},System.Predicate{System.Boolean})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic</param>
            <param name="canExecute">The execution status logic</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.GenericCommand`1.CanExecute(System.Object)">
            <summary>
            Determines whether this <see cref="T:Spotify.NetStandard.Sdk.GenericCommand`1"/> can execute in its current state
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null
            </param>
            <returns>true if this command can be executed; otherwise, false</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.GenericCommand`1.Execute(System.Object)">
            <summary>
            Executes the <see cref="T:Spotify.NetStandard.Sdk.GenericCommand`1"/> on the current command target
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null
            </param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.GenericCommand`1.RaiseCanExecuteChanged">
            <summary>
            Method used to raise the <see cref="E:Spotify.NetStandard.Sdk.GenericCommand`1.CanExecuteChanged"/> event
            to indicate that the return value of the <see cref="M:Spotify.NetStandard.Sdk.GenericCommand`1.CanExecute(System.Object)"/>
            method has changed
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.RelayCommand">
            <summary>
            Relay Command
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.RelayCommand.CanExecuteChanged">
            <summary>
            Raised when RaiseCanExecuteChanged is called
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>
            Creates a new command that can always execute
            </summary>
            <param name="execute">The execution logic</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.RelayCommand.#ctor(System.Action{System.Object},System.Func{System.Boolean})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.RelayCommand.CanExecute(System.Object)">
            <summary>
            Determines whether this <see cref="T:Spotify.NetStandard.Sdk.RelayCommand"/> can execute in its current state
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.RelayCommand.Execute(System.Object)">
            <summary>
            Executes the <see cref="T:Spotify.NetStandard.Sdk.RelayCommand"/> on the current command target
            </summary>
            <param name="parameter">
            Data used by the command. If the command does not require data to be passed, this object can be set to null
            </param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.RelayCommand.RaiseCanExecuteChanged">
            <summary>
            Method used to raise the <see cref="E:Spotify.NetStandard.Sdk.RelayCommand.CanExecuteChanged"/> event
            to indicate that the return value of the <see cref="M:Spotify.NetStandard.Sdk.RelayCommand.CanExecute(System.Object)"/>
            method has changed
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredArgs">
            <summary>
            Token Required Arguments
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredArgs.#ctor(Spotify.NetStandard.Sdk.AuthenticationTokenType)">
            <summary>
            Constructor
            </summary>
            <param name="tokenType">Token Type</param>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredArgs.TokenType">
            <summary>
            Token Type
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ClientExceptionArgs">
            <summary>
            Client Exception Arguments
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ClientExceptionArgs.#ctor(System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="exception">Exception</param>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ClientExceptionArgs.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ResponseArgs`1">
            <summary>
            Response Arguments
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseArgs`1.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseArgs`1.Items">
            <summary>
            List of Response Items
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ResponseErrorArgs">
            <summary>
            Response Error Arguments
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ResponseErrorArgs.#ctor(Spotify.NetStandard.Sdk.ErrorResponse)">
            <summary>
            Constructor
            </summary>
            <param name="error">Status</param>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseErrorArgs.Error">
            <summary>
            Error Response
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ResponseMovedArgs">
            <summary>
            Response Moved Arguments
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseMovedArgs.SourceIndex">
            <summary>
            Source Index
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseMovedArgs.TargetIndex">
            <summary>
            Target Index
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseMovedArgs.Total">
            <summary>
            Total Items
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ResponseRemovedArgs`1">
            <summary>
            Response Removed Arguments
            </summary>
            <typeparam name="TResponse">Response Type</typeparam>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseRemovedArgs`1.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseRemovedArgs`1.Items">
            <summary>
            List of Response Item
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseRemovedArgs`1.Item">
            <summary>
            Item
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ResponseUserPlaybackArgs">
            <summary>
            Response User Playback Arguments
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ResponseUserPlaybackArgs.#ctor(Spotify.NetStandard.Sdk.PlaybackType,System.String)">
            <summary>
            Constructonr
            </summary>
            <param name="playbackType">Playback Type</param>
            <param name="deviceId">Device Id</param>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseUserPlaybackArgs.PlaybackType">
            <summary>
            Playback Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResponseUserPlaybackArgs.DeviceId">
            <summary>
            Device Id
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.StatusFailedArgs">
            <summary>
            Status Failed Arguments
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.StatusFailedArgs.#ctor(Spotify.NetStandard.Sdk.StatusResponse)">
            <summary>
            Constructor
            </summary>
            <param name="status">Status</param>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.StatusFailedArgs.Status">
            <summary>
            Status Response
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AuthenticationAccessCodeNotFoundException">
            <summary>
            Authentication Access Code Not Found Exception
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AuthenticationAccessCodeNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="ex">Inner Exception</param>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AuthenticationAccessTokenNotFoundException">
            <summary>
            Authentication Access Token Not Found Exception
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AuthenticationAccessTokenNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="ex">Inner Exception</param>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AuthenticationStateNotMatchedException">
            <summary>
            Authentication State Not Matched Exception
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AuthenticationStateNotMatchedException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="ex">Inner Exception</param>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">
            <summary>
            Authentication Token Required Exception
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException.#ctor(Spotify.NetStandard.Sdk.AuthenticationTokenType)">
            <summary>
            Constructor
            </summary>
            <param name="tokenType">Token Type</param>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException.TokenType">
            <summary>
            Token Type
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.BaseAuthenticationException">
            <summary>
            Base Authentication Exception
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.BaseAuthenticationException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.BaseAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="ex">Inner Exception</param>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ConfigExtensions">
            <summary>
            Configuration Extension Methods
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAllGetCommands(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All Get Commands
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAllListCommands(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All List Commands
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAllCommands(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All Commands
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAllGetToggles(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All Get Toggles
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAllListToggles(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All Get Toggles
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAllToggles(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All Toggles
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAllGetTrackAudio(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All Get Track Audio
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAllListTrackAudio(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All Get Track Audio
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAllTrackAudio(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All Track Audio
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ConfigExtensions.AttachAll(Spotify.NetStandard.Sdk.Configuration)">
            <summary>
            Attach All
            </summary>
            <param name="configuration">Configuration</param>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.RequestExtensions">
            <summary>
            Request Extension Methods
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.RequestExtensions.All(Spotify.NetStandard.Sdk.SearchTypeRequest)">
            <summary>
            All
            </summary>
            <param name="searchTypeRequest">SearchTypeRequest</param>
            <returns>SearchTypeRequest</returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IFavourites">
            <summary>
            Favourites
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IFavourites.AlbumIds">
            <summary>
            Album Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IFavourites.ArtistIds">
            <summary>
            Artist Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IFavourites.TrackIds">
            <summary>
            Track Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IFavourites.ShowIds">
            <summary>
            Show Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IFavourites.EpisodeIds">
            <summary>
            Show Spotify Ids
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ISpotifySdkClient">
            <summary>
            Spotify SDK Client
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.SpotifyClient">
            <summary>
            Spotify Client
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.AuthenticationRedirectUri">
            <summary>
            Authentication Redirect Uri
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.AuthenticationState">
            <summary>
            Authentication State
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.Country">
            <summary>
            ISO 3166-1 alpha-2 country code e.g. GB for Country and Market
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.Locale">
            <summary>
            ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.Limit">
            <summary>
            Number of items to return per request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.NavigationType">
            <summary>
            Navigation Type (Default: NavigationType.Next)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.IsUserLoggedIn">
            <summary>
            Is User Logged In
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.AuthenticationToken">
            <summary>
            Authentication Token
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.AuthenticationVerifier">
            <summary>
            Only for AuthenticationFlowType.AuthorisationCodeWithProofKeyForCodeExchange - Proof Key for Code Exchange (PKCE) Verifier
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.Config">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.Favourites">
            <summary>
            Favourites
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.CommandActions">
            <summary>
            Command Actions
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.CurrentDevice">
            <summary>
            Current Device - Set by Get User Currently Playing
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.CurrentPlaylist">
            <summary>
            Current Playlist - Set by Get Playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ISpotifySdkClient.CurrentUser">
            <summary>
            Current User - Set by Get Current User
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.Set(System.Globalization.CultureInfo)">
            <summary>
            Set
            </summary>
            <param name="cultureInfo">(Required) Culture Info</param>
            <returns>ISpotifySdkClient</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.Set(System.String,System.String)">
            <summary>
            Set
            </summary>
            <param name="country">(Optional) ISO 3166-1 alpha-2 country code e.g. GB</param>
            <param name="locale">(Optional) ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB</param>
            <returns>ISpotifySdkClient</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.Set(Spotify.NetStandard.Sdk.IFavourites)">
            <summary>
            Set
            </summary>
            <param name="favourites">Favourites</param>
            <returns>ISpotifySdkClient</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetAuthenticationUri(Spotify.NetStandard.Sdk.AuthenticationFlowType,Spotify.NetStandard.Sdk.AuthenticationScopeRequest,System.Boolean)">
            <summary>
            Get Authentication Uri
            </summary>
            <param name="authenticationFlowType">(Required) Only AuthenticationFlowType.AuthorisationCode or AuthenticationFlowType.ImplicitGrant supported</param>
            <param name="authenticationScope">(Optional) Authentication Scope</param>
            <param name="showAuthenticationDialog">(Optional) Whether or not to force the user to approve the app again if they’ve already done so.</param>
            <exception cref="T:System.ArgumentNullException">Only thrown when AuthenticationRedirectUri is not supplied</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Only thrown when AuthenticationFlowType unsupported</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetAuthenticationTokenAsync(Spotify.NetStandard.Sdk.AuthenticationFlowType,System.Uri)">
            <summary>
            Get Authentication Token
            </summary>
            <param name="authenticationFlowType">(Required) Authentication Flow Type</param>
            <param name="authenticationResponseUri">(Required) Only for AuthenticationFlowType.AuthorisationCode or AuthenticationFlowType.ImplicitGrant - Authentication Response Uri</param>
            <returns>AuthenticationTokenResponse on Success, Null if Not</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if authenticationResponseUri and AuthenticationRedirectUri aren't set</exception>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationAccessCodeNotFoundException">Only thrown for AuthenticationFlowType.AuthorisationCode if Authorisation Code not returned</exception>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationAccessTokenNotFoundException">Only thrown for AuthenticationFlowType.ImplicitGrant if Access Token was not returned</exception>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationStateNotMatchedException">Only thrown for AuthenticationFlowType.AuthorisationCode and AuthenticationFlowType.ImplicitGrant is State doesn't match</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetAuthenticationTokenClientCredentialsAsync">
            <summary>
            Set Authentication Token Client Credentials
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.Logout">
            <summary>
            Logout
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.ISpotifySdkClient.AuthenticationTokenRequired">
            <summary>
            Authentication Token Required Event
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.ISpotifySdkClient.ClientException">
            <summary>
            Client Exception Event
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.ISpotifySdkClient.ResponseError">
            <summary>
            Response Error Event
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.ISpotifySdkClient.ResponseUserPlaybackSuccess">
            <summary>
            Response User Playback Success
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.PlaylistItemResponseRemovedHandler(Spotify.NetStandard.Sdk.PlaylistResponse,Spotify.NetStandard.Sdk.ResponseRemovedArgs{Spotify.NetStandard.Sdk.PlaylistItemResponse})">
            <summary>
            Playlist Item Response Removed Handler
            </summary>
            <param name="response">Playlist Response</param>
            <param name="args">Playlist Item Response Removed Argument</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.PlaylistItemResponseMovedHandler(Spotify.NetStandard.Sdk.PlaylistResponse,Spotify.NetStandard.Sdk.ResponseMovedArgs)">
            <summary>
            Playlist Item Response Removed Handler
            </summary>
            <param name="response">Playlist Response</param>
            <param name="args">Playlist Item Response Removed Argument</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetCategoryAsync(System.String)">
            <summary>
            Get Category
            </summary>
            <param name="categoryId">(Required) Spotify Category Id</param>
            <returns>Category Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetArtistAsync(System.String)">
            <summary>
            Get Artist
            </summary>
            <param name="artistId">(Required) Spotify Artist Id</param>
            <returns>Artist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetPlaylistAsync(System.String,System.String)">
            <summary>
            Get Playlist
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="fields">(Optional) Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are returned.</param>
            <returns>Playlist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetAlbumAsync(System.String)">
            <summary>
            Get Album
            </summary>
            <param name="albumId">(Required) Spotify Album Id</param>
            <returns>Album Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetTrackAsync(System.String)">
            <summary>
            Get Track
            </summary>
            <param name="trackId">(Required) Spotify Track Id</param>
            <returns>Track Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetTrackAudioAnalysisAsync(System.String)">
            <summary>
            Get Track Audio Analysis
            </summary>
            <param name="trackId">(Required) Spotify Track Id</param>
            <returns>Audio Analysis Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetTrackAudioFeaturesAsync(System.String)">
            <summary>
            Get Track Audio Features
            </summary>
            <param name="trackId">(Required) Spotify Track Id</param>
            <returns>Audio Features Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetEpisodeAsync(System.String)">
            <summary>
            Get Episode
            </summary>
            <param name="episodeId">(Required) Spotify Episode Id</param>
            <returns>Episode Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetShowAsync(System.String)">
            <summary>
            Get Show
            </summary>
            <param name="showId">(Required) Spotify Show Id</param>
            <returns>Show Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetCurrentUserAsync">
            <summary>
            Get Current User
            <para>Scopes: UserReadEmail, UserReadPrivate</para>
            </summary>
            <returns>Current User Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetUserAsync(System.String)">
            <summary>
            Get User
            </summary>
            <param name="userId">(Required) Spotify User Id</param>
            <returns>User Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetPlaylistImageAsync(System.String)">
            <summary>
            Get Playlist Image
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <returns>Playlist Image Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetUserCurrentlyPlayingItemAsync">
            <summary>
            Get User Currently Playing Item
            <para>Scopes: ConnectReadCurrentlyPlaying, ConnectReadPlaybackState</para>
            </summary>
            <returns>Currently Playing Item Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetUserCurrentlyPlayingAsync">
            <summary>
            Get User Currently Playing
            <para>Scopes: ConnectReadPlaybackState</para>
            </summary>
            <returns>Currently Playing Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetSavedAsync(Spotify.NetStandard.Sdk.SavedType,System.String)">
            <summary>
            Get Saved
            <para>Scopes: LibraryRead</para>
            </summary>
            <param name="savedType">(Required) Saved Type</param>
            <param name="id">(Required) Spotify Item Id</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetFollowAsync(Spotify.NetStandard.Sdk.FollowType,System.String,System.String)">
            <summary>
            Get Follow
            <para>Scopes: FollowType.FollowArtist FollowType.FollowUser - FollowRead, FollowType.FollowPlaylist - PlaylistReadPrivate</para>
            </summary>
            <param name="followType">(Required) Follow Type</param>
            <param name="id">(Required) Spotify Item Id</param>
            <param name="userId">(Required) Only for FollowType.FollowPlaylist</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetAsync``1(System.String)">
            <summary>
            Get
            </summary>
            <typeparam name="TResponse">Response Type: CategoryResponse, ArtistResponse, PlaylistResponse, AlbumResponse, TrackResponse, AudioFeaturesResponse, AudioAnalysisResponse, EpisodeResponse, ShowResponse, CurrentUserResponse, UserResponse, PlaylistImageResponse, CurrentlyPlayingResponse, CurrentlyPlayingItemResponse</typeparam>
            <param name="id">Id</param>
            <returns>Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.IsPlaylistOwnedByCurrentUser(Spotify.NetStandard.Sdk.PlaylistResponse)">
            <summary>
            Is Playlist Owned by Current User?
            <para>Prerequisite: GetCurrentUser</para>
            </summary>
            <param name="playlist">Playlist Response</param>
            <returns>True if Playlist Owned, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListCategoriesAsync(Spotify.NetStandard.Sdk.CategoriesRequest)">
            <summary>
            List Categories
            </summary>
            <param name="categoriesRequest">(Optional) Categories Request</param>
            <returns>NavigationResponse of Category Responses</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListCategoriesAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.CategoryResponse})">
            <summary>
            List Categories
            </summary>
            <param name="navigationResponse">(Required) NavigationResponse of Category Responses</param>
            <returns>NavigationResponse of Category Responses</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListArtistsAsync(Spotify.NetStandard.Sdk.ArtistsRequest)">
            <summary>
            List Artists
            <para>Scopes: ArtistType.UserFollowed - FollowRead, UserFollowed.UserTop - LibraryRead</para>
            </summary>
            <param name="artistsRequest">(Required) Artists Request</param>
            <returns>Navigation Response of Artist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListArtistsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.ArtistResponse})">
            <summary>
            List Artists
            <para>Scopes: ArtistType.UserFollowed - FollowRead, UserFollowed.UserTop - LibraryRead</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Artist Response</param>
            <returns>Navigation Response of Artist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListAlbumsAsync(Spotify.NetStandard.Sdk.AlbumsRequest)">
            <summary>
            List Albums
            <para>Scopes: AlbumType.UserSaved - LibraryRead</para>
            </summary>
            <param name="albumsRequest">(Required) Albums Request</param>
            <returns>Navigation Response of Album Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListAlbumsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.AlbumResponse})">
            <summary>
            List Albums
            <para>Scopes: AlbumType.UserSaved - LibraryRead</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Album Response</param>
            <returns>Navigation Response of Album Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListTracksAsync(Spotify.NetStandard.Sdk.TracksRequest)">
            <summary>
            List Tracks
            <para>Scopes: TrackType.UserRecentlyPlayed - ListeningRecentlyPlayed, TrackType.UserSaved - LibraryRead, TrackType.UserTop - ListeningTopRead</para>
            </summary>
            <param name="tracksRequest">(Required) Tracks Request</param>
            <returns>Navigation Response of Track Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListTracksAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.TrackResponse})">
            <summary>
            List Tracks
            <para>Scopes: TrackType.UserRecentlyPlayed - ListeningRecentlyPlayed, TrackType.UserSaved - LibraryRead, TrackType.UserTop - ListeningTopRead</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Track Response</param>
            <returns>Navigation Response of Track Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListPlaylistsAsync(Spotify.NetStandard.Sdk.PlaylistsRequest)">
            <summary>
            List Playlists
            <para>Scopes: PlaylistType.User - PlaylistReadPrivate, PlaylistReadCollaborative</para>
            </summary>
            <param name="playlistsRequest">(Required) Playlists Request</param>
            <returns>Navigation Response of Playlist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListPlaylistsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.PlaylistResponse})">
            <summary>
            List Playlists
            <para>Scopes: PlaylistType.User - PlaylistReadPrivate, PlaylistReadCollaborative</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Playlist Response</param>
            <returns>Navigation Response of Playlist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListPlaylistItemsAsync(Spotify.NetStandard.Sdk.PlaylistItemsRequest)">
            <summary>
            List Playlist Items
            </summary>
            <param name="playlistItemsRequest">(Required) Playlist Items Request</param>
            <returns>Navigation Response of Track Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListPlaylistItemsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.PlaylistItemResponse})">
            <summary>
            List Playlist Items
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Playlist Item Response</param>
            <returns>Navigation Response of Playlist Item Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListEpisodesAsync(Spotify.NetStandard.Sdk.EpisodesRequest)">
            <summary>
            List Episodes
            </summary>
            <param name="episodesRequest">(Required) Episodes Request</param>
            <returns>Navigation Response of Episode Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListEpisodesAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.EpisodeResponse})">
            <summary>
            List Episodes
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Episode Response</param>
            <returns>Navigation Response of Episode Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListShowsAsync(Spotify.NetStandard.Sdk.ShowsRequest)">
            <summary>
            List Shows
            <para>Scopes: ShowType.UserSaved - LibraryRead</para>
            </summary>
            <param name="showsRequest">(Required) Shows Request</param>
            <returns>Navigation Response of Episode Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListShowsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.ShowResponse})">
            <summary>
            List Shows
            <para>Scopes: ShowType.UserSaved - LibraryRead</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Show Response</param>
            <returns>Navigation Response of Show Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListRecommendationGenresAsync">
            <summary>
            List Recommendation Genres
            </summary>
            <returns>List of Recommendation Genre Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListAudioFeaturesAsync(Spotify.NetStandard.Sdk.AudioFeaturesRequest)">
            <summary>
            List Audio Features
            </summary>
            <param name="audioFeaturesRequest">(Required) Audio Features Request</param>
            <returns>List of Audio Features Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListUserDevicesAsync">
            <summary>
            List User Devices
            <para>Scopes: ConnectReadPlaybackState</para>
            </summary>
            <returns>Navigation Response of Device Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListSavedAsync(Spotify.NetStandard.Sdk.SavedType,System.Collections.Generic.List{System.String})">
            <summary>
            List Saved
            </summary>
            <para>Scopes: LibraryRead</para>
            <param name="savedType">(Required) Saved Type</param>
            <param name="multipleIds">(Required) SavedType.Album - Multiple Spotify Album Ids, SavedType.Track - Multiple Spotify Track Ids, SavedType.Show - Multiple Spotify Show Ids</param>
            <returns>Navigation Response of bool</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListFollowAsync(Spotify.NetStandard.Sdk.FollowType,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            List Follow
            </summary>
            <para>Scopes: FollowType.FollowArtist FollowType.FollowUser : FollowRead, FollowType.FollowPlaylist : PlaylistReadPrivate</para>
            <param name="followType">(Required) FollowType Type</param>
            <param name="multipleIds">(Required) FollowType.FollowArtist - Multiple Spotify Artist Ids, FollowType.FollowUser and FollowType.Playlist - Multiple Spotify User Ids</param>
            <param name="playlistId">(Required) Only for FollowType.FollowPlaylist</param>
            <returns>Navigation Response of bool</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListAsync``2(``0)">
            <summary>
            List
            </summary>
            <typeparam name="TRequest">Request Type: CategoriesRequest, ArtistsRequest, PlaylistsRequest, PlaylistItemsRequest, AlbumsRequest, TracksRequest, AudioFeaturesRequest, EpisodesRequest, ShowsRequest</typeparam>
            <typeparam name="TResponse">Response Type: CategoryResponse, ArtistResponse, PlaylistResponse, PlaylistItemResponse, AlbumResponse, TrackResponse, AudioFeaturesResponse, EpisodeResponse, ShowResponse, DeviceResponse, RecommendationGenreResponse</typeparam>
            <param name="request">Request</param>
            <returns>Navigation Response of Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListAsync``1(Spotify.NetStandard.Sdk.NavigationResponse{``0})">
            <summary>
            List
            </summary>
            <typeparam name="TResponse">Response Type: CategoryResponse, ArtistResponse, PlaylistResponse, PlaylistItemResponse, AlbumResponse, TrackResponse, AudioFeaturesResponse, EpisodeResponse, ShowResponse</typeparam>
            <returns>Navigation Response of Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SearchAsync(Spotify.NetStandard.Sdk.SearchRequest)">
            <summary>
            Search
            </summary>
            <param name="searchRequest">(Required) Search Request</param>
            <returns>Search Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetUserPlaybackAsync(Spotify.NetStandard.Sdk.PlaybackType,System.String,System.Nullable{System.Int32})">
            <summary>
            Set User Playback
            <para>Scopes: ConnectModifyPlaybackState</para>
            </summary>
            <param name="playbackType">(Required) Playback Type</param>
            <param name="deviceId">(Optional) Spotify Device Id</param>
            <param name="option">(Required) Only for PlaybackType.Seek - Position in milliseconds to seek to and PlaybackType.Volume - Value from 0 to 100 inclusive</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetSavedAsync(Spotify.NetStandard.Sdk.SavedType,Spotify.NetStandard.Sdk.SetType,System.Collections.Generic.List{System.String})">
            <summary>
            Set Saved
            <para>Scopes: LibraryModify</para>
            </summary>
            <param name="savedType">(Required) Saved Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="multipleIds">(Required) SavedType.Album - Multiple Spotify Album Ids, SavedType.Track - Multiple Spotify Track Ids, SavedType.Show - Multiple Spotify Show Ids</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetSavedAsync(Spotify.NetStandard.Sdk.SavedType,Spotify.NetStandard.Sdk.SetType,System.String)">
            <summary>
            Set Saved
            <para>Scopes: LibraryModify</para>
            </summary>
            <param name="savedType">(Required) Saved Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="id">(Required) Spotify Item Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetFollowAsync(Spotify.NetStandard.Sdk.FollowType,Spotify.NetStandard.Sdk.SetType,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Set Follow
            <para>Scopes: FollowModify, FollowType.Playlist and SetType.Remove - PlaylistModifyPublic or PlaylistModifyPrivate</para>
            </summary>
            <param name="followType">(Required) Follow Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="multipleIds">(Required) Only for FollowType.Artist - Multiple Spotify Artist Ids, FollowType.User - Multiple Spotify User Ids</param>
            <param name="playlistId">(Required) Only for FollowType.Playlist</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetFollowAsync(Spotify.NetStandard.Sdk.FollowType,Spotify.NetStandard.Sdk.SetType,System.String)">
            <summary>
            Set Follow
            <para>Scopes: FollowModify, FollowType.Playlist and SetType.Remove - PlaylistModifyPublic or PlaylistModifyPrivate</para>
            </summary>
            <param name="followType">(Required) Follow Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="id">(Required) FollowType.Artist - Spotify Artist Id, FollowType.User - Spotify User Id, FollowType.Playlist - Spotify Playlist Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetPlaylistAsync(Spotify.NetStandard.Sdk.SetPlaylistRequest)">
            <summary>
            Set Playlist
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="request">(Required) Set Playlist Request</param>
            <returns>Playlist Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetPlaylistItemsAsync(System.String,System.Collections.Generic.List{Spotify.NetStandard.Sdk.AddPlaylistItemRequest})">
            <summary>
            Set Playlist Items
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="addPlaylistItemRequests">(Required) The items to add in the Playlist</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetPlaylistItemAsync(System.String,Spotify.NetStandard.Sdk.PlayItemType,System.String)">
            <summary>
            Set Playlist Item
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="playItemType">Track or Episode</param>
            <param name="id">Spotify Track or Episode Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetPlaylistItemOrderAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Set Playlist Item Order
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="rangeStart">(Required) Position of the first item to be reordered</param>
            <param name="insertBefore">(Required) Position where the items should be inserted. To reorder the items to the end of the playlist, simply set insertBefore to the position after the last item.</param>
            <param name="rangeLength">(Optional) Amount of items to be reordered. Defaults to 1 if not set. The range of items to be reordered begins from the rangeStart position, and includes the rangeLength subsequent items.</param>
            <param name="snapshotId">(Optional) Playlist’s snapshot ID against which you want to make the changes.</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetPlaylistImageAsync(System.String,System.Byte[])">
            <summary>
            Set Playlist Image
            <para>Scopes: ImageUserGeneratedContentUpload</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="jpegFileBytes">(Required) JPEG Image File Bytes (256Kb Max File Size)</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ToggleSavedAsync(Spotify.NetStandard.Sdk.SavedType,System.String)">
            <summary>
            Toggle Saved
            <para>Scopes: LibraryModify</para>
            </summary>
            <param name="savedType">(Required) Saved Type</param>
            <param name="id">(Required) SavedType.Album - Spotify Album Id, SavedType.Track - Spotify Track Id, SavedType.Show - Spotify Show Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ToggleFollowAsync(Spotify.NetStandard.Sdk.FollowType,System.String)">
            <summary>
            Toggle Follow
            <para>Scopes: FollowType.FollowArtist FollowType.FollowUser - FollowRead and FollowModify, FollowType.FollowPlaylist - FollowModify and PlaylistModifyPublic or PlaylistModifyPrivate</para>
            </summary>
            <param name="followType">(Required) Follow Type</param>
            <param name="id">(Required) FollowType.Artist - Spotify Artist Id, FollowType.User - Spotify User Id, FollowType.Playlist - Spotify Playlist Id</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetToggleAsync(Spotify.NetStandard.Sdk.Toggle)">
            <summary>
            Set Toggle
            </summary>
            <param name="toggle">Toggle</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetToggleAsync(Spotify.NetStandard.Sdk.ToggleType,System.String,System.Byte)">
            <summary>
            Get Toggle
            </summary>
            <param name="toggleType">Toggle Type</param>
            <param name="id">Toggle Id</param>
            <param name="itemType">Toggle Item Type</param>
            <returns>Toggle</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListTogglesAsync(Spotify.NetStandard.Sdk.ToggleType,System.Collections.Generic.List{System.String},System.String,System.Byte)">
            <summary>
            List Toggles
            </summary>
            <param name="toggleType">Toggle Type</param>
            <param name="multipleIds">Multiple Ids</param>
            <param name="playlistId">Playlist Id</param>
            <param name="itemType">Item Type</param>
            <returns>List of Toggle</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.AddUserPlaybackAsync(Spotify.NetStandard.Sdk.PlaybackStartType,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Add User Playback
            <para>Scopes: ConnectModifyPlaybackState</para>
            </summary>
            <param name="playbackStartType">(Required) Playback Start Type</param>
            <param name="id">(Required) PlaybackStartType.Track - Spotify Track Id, PlaybackStartType.Episode - Spotify Episode Id, PlaybackStartType.Album - Spotify Album Id, PlaybackStartType.Artist - Spotify Artist Id, PlaybackStartType.Playlist - Spotify Playlist Id, PlaybackStartType.Show - Spotify Show Id</param>
            <param name="deviceId">(Optional) Spotify Device Id</param>
            <param name="position">(Optional) Indicates from what position to start playback. Must be a positive number. Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="offsetId">(Optional) Only for PlaybackStartType.Album, PlaybackStartType.Artist, PlaybackStartType.Playlist and PlaybackStartType.Show. Only use either Position or OffsetId. Offset Id indicates from where in the context playback should start.</param>
            <exception cref="T:System.ArgumentException">Thrown when Position and OffsetId are Provided</exception>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.AddUserPlaybackQueueAsync(Spotify.NetStandard.Sdk.PlayItemType,System.String,System.String)">
            <summary>
            Add User Playback Queue
            <para>Scopes: ConnectModifyPlaybackState</para>
            </summary>
            <param name="playItemType">(Required) Track or Episode</param>
            <param name="id">(Required) PlayItemType.Track - Spotify Track Id, PlayItemType.Episode - Spotify Episode Id</param>
            <param name="deviceId">(Optional) Spotify Device Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.AddPlaylistAsync(Spotify.NetStandard.Sdk.AddPlaylistRequest)">
            <summary>
            Add Playlist
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="request">(Required) Add Playlist Request</param>
            <returns>Playlist Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.AddPlaylistItemsAsync(System.String,System.Collections.Generic.List{Spotify.NetStandard.Sdk.AddPlaylistItemRequest},System.Nullable{System.Int32})">
            <summary>
            Add Playlist Items
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="requests">(Required) The items to add to the playlist</param>
            <param name="position">(Optional) The position to insert the items, a zero-based index</param>
            <returns>Snapshot Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.AddPlaylistItemAsync(System.String,Spotify.NetStandard.Sdk.PlayItemType,System.String,System.Nullable{System.Int32})">
            <summary>
            Add Playlist Item
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="playItemType">(Required) Track or Episode</param>
            <param name="id">(Required) Spotify Track Id or Episode Id</param>
            <param name="position">(Optional) The positions to remove items by id, a zero-based index</param>
            <returns>Snapshot Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.RemovePlaylistItemsAsync(System.String,System.Collections.Generic.List{Spotify.NetStandard.Sdk.RemovePlaylistItemRequest},System.String)">
            <summary>
            Remove Playlist Items
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="removePlaylistItemRequests">(Required) The items to remove from the Playlist</param>
            <param name="snapshotId">(Optional) The playlist’s snapshot ID against which you want to make the changes. The API will validate that the specified tracks exist and in the specified positions and make the changes, even if more recent changes have been made to the playlist</param>
            <returns>Snapshot Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.RemovePlaylistItemAsync(System.String,Spotify.NetStandard.Sdk.PlayItemType,System.String,System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Remove Playlist Item
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="playItemType">(Required) Track or Episode</param>
            <param name="id">(Required) Spotify Track Id or Episode Id</param>
            <param name="positions">(Optional) The positions to remove items by id, a zero-based index</param>
            <param name="snapshotId">(Optional) The playlist’s snapshot ID against which you want to make the changes. The API will validate that the specified tracks exist and in the specified positions and make the changes, even if more recent changes have been made to the playlist</param>
            <returns>Snapshot Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.GetFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,System.String)">
            <summary>
            Get Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="id">(Required) FavouriteType.Album - Spotify Album Id, FavouriteType.Artist - Spotify Artist Id, FavouriteType.Track - Spotify Track Id, FavouriteType.Show - Spotify Show Id, FavouriteType.Episode - Spotify Episode Id</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ListFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,System.Collections.Generic.List{System.String})">
            <summary>
            List Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="multipleIds">(Required) FavouriteType.Album - Multiple Spotify Album Ids, FavouriteType.Artist - Multiple Spotify Artist Ids, FavouriteType.Track - Multiple Spotify Track Ids, FavouriteType.Show - Multiple Spotify Show Ids, FavouriteType.Episode - Multiple Spotify Episode Ids</param>
            <returns>Navigation Response of Bool</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,Spotify.NetStandard.Sdk.SetType,System.String)">
            <summary>
            Set Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="id">(Required) FavouriteType.Album - Spotify Album Id, FavouriteType.Artist - Spotify Artist Id, FavouriteType.Track - Spotify Track Id, FavouriteType.Show - Spotify Show Id, FavouriteType.Episode - Spotify Episode Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.SetFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,Spotify.NetStandard.Sdk.SetType,System.Collections.Generic.List{System.String})">
            <summary>
            Set Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="multipleIds">(Required) FavouriteType.Album - Multiple Spotify Album Ids, FavouriteType.Artist - Multiple Spotify Artist Ids, FavouriteType.Track - Multiple Spotify Track Ids, FavouriteType.Show - Multiple Spotify Show Ids, FavouriteType.Episode - Multiple Spotify Episode Ids</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.ISpotifySdkClient.ToggleFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,System.String)">
            <summary>
            Toggle Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="id">(Required) FavouriteType.Album - Spotify Album Id, FavouriteType.Artist - Spotify Artist Id, FavouriteType.Track - Spotify Track Id, FavouriteType.Show - Spotify Show Id, FavouriteType.Episode - Spotify Episode Id</param>
            <returns>Bool Response</returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IAssetResponse">
            <summary>
            Asset Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IAssetResponse.Images">
            <summary>
            Images in various sizes, if available
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IAssetResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IAssetResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IAssetResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IContentResponse">
            <summary>
            Content Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IContentResponse.Id">
            <summary>
            The base-62 identifier that you can find at the end of the Spotify URI for the object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IContentResponse.Name">
            <summary>
            The name of the content
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IContextResponse">
            <summary>
            Context Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IContextResponse.Type">
            <summary>
            The object type of the object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IContextResponse.Href">
            <summary>
            A link to the Web API endpoint providing full details of the object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IContextResponse.ExternalUrls">
            <summary>
            Known external URLs for this object.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IContextResponse.Uri">
            <summary>
            The Spotify URI for the object
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IErrorResponse">
            <summary>
            Error Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IErrorResponse.Error">
            <summary>
            Error Object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IErrorResponse.IsSuccess">
            <summary>
            Is Success
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.INavigationResponse">
            <summary>
            Navigation Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.NavigationType">
            <summary>
            Navigation Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.Href">
            <summary>
            Href
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.Back">
            <summary>
            Back Link
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.Next">
            <summary>
            Next Link
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.Error">
            <summary>
            Error Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.NavigationRequests">
            <summary>
            Navigation Requests
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.INavigationResponse.IsSuccess">
            <summary>
            Is Success
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IPlaybackResponse">
            <summary>
            Playback Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlaybackResponse.PlaybackStartType">
            <summary>
            Playback Start Type
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IPlayItemResponse">
            <summary>
            Play Item Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.PlayItemType">
            <summary>
            Play Item Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.Duration">
            <summary>
            The item length in milliseconds.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.Preview">
            <summary>
            A link to a 30 second preview (MP3 format) of the item.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.IsExplicit">
            <summary>
            Whether or not the item is explicit ( true = yes it does; false = no it does not OR unknown).
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.IsPlayable">
            <summary>
            If true , the item is playable in the given market. Otherwise false.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.Length">
            <summary>
            Item Length
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.AddUserPlaybackCommand">
            <summary>
            Start/Resume a User's Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.AddUserPlaybackQueueCommand">
            <summary>
            Add an item to the end of the user's current playback queue
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.AddPlaylistItemCommand">
            <summary>
            Add Item to a Playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlayItemResponse.ToggleFavourite">
            <summary>
            Toggle Favourite Episode
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IPlaylistItemResponse">
            <summary>
            Playlist Item Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlaylistItemResponse.PlayItemType">
            <summary>
            Play Item Type of Track or Episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlaylistItemResponse.Current">
            <summary>
            Current Track or Episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IPlaylistItemResponse.RemovePlaylistItemCommand">
            <summary>
            Remove Items from a Playlist
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IResponse">
            <summary>
            Response
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.AutoMapperExtensions">
            <summary>
            Mapping Extensions
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AutoMapper.AutoMapperExtensions.Setup(AutoMapper.IMapper)">
            <summary>
            Setup
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.AutoMapperProfile">
            <summary>
            Auto Mapper Profile
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AutoMapper.AutoMapperProfile.MapAuthentication">
            <summary>
            Map Authentication
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AutoMapper.AutoMapperProfile.MapNavigation">
            <summary>
            Map Navigation
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AutoMapper.AutoMapperProfile.MapRequests">
            <summary>
            Map Requests
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AutoMapper.AutoMapperProfile.MapResponses">
            <summary>
            Map Responses
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.AutoMapper.AutoMapperProfile.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.AlbumResponseToSavedAlbumConverter">
            <summary>
            Album Response to Saved Album Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.SavedAlbumToAlbumResponseConverter">
            <summary>
            Saved Album to Album Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.DisallowsToAllowsResponseConverter">
            <summary>
            Disallows to Allows Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.BoolsToNavigationBoolResponseConverter">
            <summary>
            Bools to Navigation Bool Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.DevicesToNavigationDeviceResponseConverter">
            <summary>
            Devices to Navigation Device Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.ImageListToPlaylistImageResponseConverter">
            <summary>
            Image List to Playlist Image Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.CursorPagingToNavigationResponseConverter`2">
            <summary>
            Cursor Paging to Navigation Response Converter
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TDestination"></typeparam>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.NavigationResponseToCursorPagingConverter`2">
            <summary>
            Cursor Paging to Navigation Response Converter
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TDestination"></typeparam>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.ListToNavigationResponseConverter`2">
            <summary>
            List to Navigation Response Converter
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TDestination"></typeparam>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.NavigationResponseToListConverter`2">
            <summary>
            Navigation Response To Paging Converter
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TDestination"></typeparam>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.NavigationResponseToPagingConverter`2">
            <summary>
            Navigation Response to Paging Converter
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TDestination"></typeparam>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.PagingToNavigationResponseConverter`2">
            <summary>
            Paging to Navigation Response Converter
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TDestination"></typeparam>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.AvailableGenreSeedsToNavigationResponseConverter">
            <summary>
            Available Genre Seeds to Navigation Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.SavedShowToShowResponseConverter">
            <summary>
            Saved Show to Show Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.ShowResponseToSavedShowConverter">
            <summary>
            Show Response to Saved Show Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.PlayHistoryToTrackResponseConverter">
            <summary>
            Play History to Track Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.TrackResponseToPlayHistoryConverter">
            <summary>
            Track Response to Play History Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.RecommendationsResponseToNavigationResponseConverter">
            <summary>
            Recommendations Response to Navigation Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.SavedTrackToTrackResponseConverter">
            <summary>
            Saved Track to Track Response Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AutoMapper.TrackResponseToSavedTrackConverter">
            <summary>
            Track Response to Saved Track Converter
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.CommandActions">
            <summary>
            Command Actions
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.Category">
            <summary>
            Category Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.Artist">
            <summary>
            Artist Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.Album">
            <summary>
            Album Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.Track">
            <summary>
            Track Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.GetAudioAnalysis">
            <summary>
            Get Audio Analysis Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.GetAudioFeatures">
            <summary>
            Get Audio Features Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.Playlist">
            <summary>
            Playlist Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.SetPlaylistImage">
            <summary>
            Upload a Custom Playlist Cover Image Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.SetPlaylist">
            <summary>
            Change a Playlist's Details Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.GetPlaylistImage">
            <summary>
            Get Playlist Image Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.AddPlaylistItem">
            <summary>
            Add Playlist Item Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.RemovePlaylistItem">
            <summary>
            Remove Playlist Item Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.Show">
            <summary>
            Show Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.Episode">
            <summary>
            Episode Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.User">
            <summary>
            User Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.CurrentUser">
            <summary>
            Current User Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.RecommendationGenre">
            <summary>
            Recommendation Genre Command Action
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CommandActions.CurrentlyPlaying">
            <summary>
            Currently Playing Command Action
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.Internal.Favourites">
            <summary>
            Favourites
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.Favourites.AlbumIds">
            <summary>
            Album Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.Favourites.ArtistIds">
            <summary>
            Artist Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.Favourites.TrackIds">
            <summary>
            Track Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.Favourites.ShowIds">
            <summary>
            Show Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.Favourites.EpisodeIds">
            <summary>
            Show Spotify Ids
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Add(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Add
            </summary>
            <param name="id">Id</param>
            <param name="items">List of Items</param>
            <returns>True if Items is accepted or already in list, False if too many items</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Add(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String}@)">
            <summary>
            Add
            </summary>
            <param name="multipleIds">Ids</param>
            <param name="items">List of Items</param>
            <returns>Array of Bools where True if Item was accepted or already in list, False if was not added as were too many items</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Contains(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Contains
            </summary>
            <param name="id">Id</param>
            <param name="items">List of Items</param>
            <returns>True if in List, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Contains(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Contains
            </summary>
            <param name="multipleIds">Multiple Ids</param>
            <param name="items">List of Item</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Remove(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Remove
            </summary>
            <param name="id"></param>
            <param name="items">List of Items</param>
            <returns>True if Removed, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Remove(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String}@)">
            <summary>
            Remove
            </summary>
            <param name="multipleIds">List of Id</param>
            <param name="items">List of Items</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Add(Spotify.NetStandard.Sdk.FavouriteType,System.String)">
            <summary>
            Add
            </summary>
            <param name="favouriteType">FavouriteType</param>
            <param name="id">Id</param>
            <returns>True if Items is accepted or already in list, False if too many items</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Add(Spotify.NetStandard.Sdk.FavouriteType,System.Collections.Generic.List{System.String})">
            <summary>
            Add
            </summary>
            <param name="favouriteType">FavouriteType</param>
            <param name="multipleIds">Item Ids</param>
            <returns>True if Items is accepted or already in list, False if too many items</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Contains(Spotify.NetStandard.Sdk.FavouriteType,System.String)">
            <summary>
            Contains
            </summary>
            <param name="favouriteType">FavouriteType</param>
            <param name="id">Item Id</param>
            <returns>True if in List, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Contains(Spotify.NetStandard.Sdk.FavouriteType,System.Collections.Generic.List{System.String})">
            <summary>
            Contains
            </summary>
            <param name="favouriteType">FavouriteType</param>
            <param name="multipleIds">Multiple Spotify Item Id</param>
            <returns>True if in List, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Remove(Spotify.NetStandard.Sdk.FavouriteType,System.String)">
            <summary>
            Remove
            </summary>
            <param name="favouriteType">FavouriteType</param>
            <param name="id">Item Id</param>
            <returns>True if Items is removed, False if not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Favourites.Remove(Spotify.NetStandard.Sdk.FavouriteType,System.Collections.Generic.List{System.String})">
            <summary>
            Remove
            </summary>
            <param name="favouriteType">FavouriteType</param>
            <param name="multipleIds">Item Ids</param>
            <returns>True if Items are remove in list, False if not</returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient">
            <summary>
            Spotify SDK Client
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.OnAuthenticationTokenRequired(Spotify.NetStandard.Sdk.AuthenticationTokenType)">
            <summary>
            On Authentication Token Required 
            </summary>
            <param name="authenticationTokenType">Authentication Token Type</param>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if no AuthenticationTokenRequired Event Subscribers</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.OnClientException(System.Exception)">
            <summary>
            On Client Exception Required 
            </summary>
            <param name="exception">Exception</param>
            <exception cref="T:System.Exception">Thrown if no ClientException Event Subscribers</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.OnStatusFailed(Spotify.NetStandard.Sdk.StatusResponse)">
            <summary>
            On Status Failed
            </summary>
            <param name="status">Status</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.OnResponseError(Spotify.NetStandard.Sdk.BaseResponse)">
            <summary>
            On Response Error
            </summary>
            <param name="response"></param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.OnSetUserPlaybackSuccess(Spotify.NetStandard.Sdk.StatusResponse,Spotify.NetStandard.Sdk.PlaybackType,System.String)">
            <summary>
            On Set User Playback Success
            </summary>
            <param name="status">Status</param>
            <param name="playbackType">Playback Type</param>
            <param name="deviceId">Device Id</param>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SpotifyClient">
            <summary>
            Spotify Client
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AuthenticationRedirectUri">
            <summary>
            Authentication Redirect Uri
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AuthenticationState">
            <summary>
            Authentication State
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.Country">
            <summary>
            ISO 3166-1 alpha-2 country code e.g. GB for Country and Market
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.Locale">
            <summary>
            ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.Limit">
            <summary>
            Number of items to return per request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.NavigationType">
            <summary>
            Navigation Type (Default: NavigationType.Next)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.IsUserLoggedIn">
            <summary>
            Is User Logged In
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AuthenticationToken">
            <summary>
            Authentication Token
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AuthenticationVerifier">
            <summary>
            Only for AuthenticationFlowType.AuthorisationCodeWithProofKeyForCodeExchange - Proof Key for Code Exchange (PKCE) Verifier
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.Config">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.Favourites">
            <summary>
            Favourites
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.CommandActions">
            <summary>
            Command Actions
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.CurrentDevice">
            <summary>
            Current Device - Set by Get User Currently Playing
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.CurrentPlaylist">
            <summary>
            Current Playlist - Set by Get Playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.CurrentUser">
            <summary>
            Current User - Set by Get Current User
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.#ctor(System.String,System.String,System.Uri,System.String)">
            <summary>
            Spotify Sdk Client
            </summary>
            <param name="clientId">(Required) Spotify Client Id</param>
            <param name="clientSecret">(Optional) Spotify Client Secret</param>
            <param name="authorisationRedirectUri">(Optional) Authorisation Redirect Uri</param>
            <param name="authorisationState">Authorisation State</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.Set(System.Globalization.CultureInfo)">
            <summary>
            Set
            </summary>
            <param name="cultureInfo">(Required) Culture Info</param>
            <returns>ISpotifySdkClient</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.Set(System.String,System.String)">
            <summary>
            Set
            </summary>
            <param name="country">(Optional) ISO 3166-1 alpha-2 country code e.g. GB</param>
            <param name="locale">(Optional) ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB</param>
            <returns>ISpotifySdkClient</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.Set(Spotify.NetStandard.Sdk.IFavourites)">
            <summary>
            Set
            </summary>
            <param name="favourites">Favourites</param>
            <returns>ISpotifySdkClient</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetAuthenticationUri(Spotify.NetStandard.Sdk.AuthenticationFlowType,Spotify.NetStandard.Sdk.AuthenticationScopeRequest,System.Boolean)">
            <summary>
            Get Authentication Uri
            </summary>
            <param name="authenticationFlowType">(Required) Only AuthenticationFlowType.AuthorisationCode or AuthenticationFlowType.ImplicitGrant supported</param>
            <param name="authenticationScope">(Optional) Authentication Scope</param>
            <param name="showAuthenticationDialog">(Optional) Whether or not to force the user to approve the app again if they’ve already done so.</param>
            <exception cref="T:System.ArgumentNullException">Only thrown when AuthenticationRedirectUri is not supplied</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Only thrown when AuthenticationFlowType unsupported</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetAuthenticationTokenAsync(Spotify.NetStandard.Sdk.AuthenticationFlowType,System.Uri)">
            <summary>
            Get Authentication Token
            </summary>
            <param name="authenticationFlowType">(Required) Authentication Flow Type</param>
            <param name="authenticationResponseUri">(Required) Only for AuthenticationFlowType.AuthorisationCode or AuthenticationFlowType.ImplicitGrant - Authentication Response Uri</param>
            <returns>AuthenticationTokenResponse on Success, Null if Not</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if authenticationResponseUri and AuthenticationRedirectUri aren't set</exception>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationAccessCodeNotFoundException">Only thrown for AuthenticationFlowType.AuthorisationCode if Authorisation Code not returned</exception>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationAccessTokenNotFoundException">Only thrown for AuthenticationFlowType.ImplicitGrant if Access Token was not returned</exception>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationStateNotMatchedException">Only thrown for AuthenticationFlowType.AuthorisationCode and AuthenticationFlowType.ImplicitGrant is State doesn't match</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetAuthenticationTokenClientCredentialsAsync">
            <summary>
            Set Authentication Token Client Credentials
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.Logout">
            <summary>
            Logout
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AuthenticationTokenRequired">
            <summary>
            Authentication Token Required Event
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ClientException">
            <summary>
            Client Exception Event
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ResponseError">
            <summary>
            Response Error Event
            </summary>
        </member>
        <member name="E:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ResponseUserPlaybackSuccess">
            <summary>
            Response User Playback Success
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.PlaylistItemResponseRemovedHandler(Spotify.NetStandard.Sdk.PlaylistResponse,Spotify.NetStandard.Sdk.ResponseRemovedArgs{Spotify.NetStandard.Sdk.PlaylistItemResponse})">
            <summary>
            Playlist Item Response Removed Handler
            </summary>
            <param name="response">Playlist Response</param>
            <param name="args">Playlist Item Response Removed Argument</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.PlaylistItemResponseMovedHandler(Spotify.NetStandard.Sdk.PlaylistResponse,Spotify.NetStandard.Sdk.ResponseMovedArgs)">
            <summary>
            Playlist Item Response Removed Handler
            </summary>
            <param name="response">Playlist Response</param>
            <param name="args">Playlist Item Response Removed Argument</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetCategoryAsync(System.String)">
            <summary>
            Get Category
            </summary>
            <param name="categoryId">(Required) Spotify Category Id</param>
            <returns>Category Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetArtistAsync(System.String)">
            <summary>
            Get Artist
            </summary>
            <param name="artistId">(Required) Spotify Artist Id</param>
            <returns>Artist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetPlaylistAsync(System.String,System.String)">
            <summary>
            Get Playlist
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="fields">(Optional) Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are returned.</param>
            <returns>Playlist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetAlbumAsync(System.String)">
            <summary>
            Get Album
            </summary>
            <param name="albumId">(Required) Album Spotify Id</param>
            <returns>Album Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetTrackAsync(System.String)">
            <summary>
            Get Track
            </summary>
            <param name="trackId">(Required) Spotify Track Id</param>
            <returns>Track Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetTrackAudioAnalysisAsync(System.String)">
            <summary>
            Get Track Audio Analysis
            </summary>
            <param name="trackId">(Required) Spotify Track Id</param>
            <returns>Audio Analysis Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetTrackAudioFeaturesAsync(System.String)">
            <summary>
            Get Track Audio Features
            </summary>
            <param name="trackId">(Required) Spotify Track Id</param>
            <returns>Audio Features Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetEpisodeAsync(System.String)">
            <summary>
            Get Episode
            </summary>
            <param name="episodeId">(Required) Spotify Episode Id</param>
            <returns>Episode Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetShowAsync(System.String)">
            <summary>
            Get Show
            </summary>
            <param name="showId">(Required) Spotify Show Id</param>
            <returns>Show Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetCurrentUserAsync">
            <summary>
            Get Current User
            <para>Scopes: UserReadEmail, UserReadPrivate</para>
            </summary>
            <returns>Current User Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetUserAsync(System.String)">
            <summary>
            Get User
            </summary>
            <param name="userId">(Required) Spotify User Id</param>
            <returns>User Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetPlaylistImageAsync(System.String)">
            <summary>
            Get Playlist Image
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <returns>Playlist Image Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetUserCurrentlyPlayingItemAsync">
            <summary>
            Get User Currently Playing Item
            <para>Scopes: ConnectReadCurrentlyPlaying, ConnectReadPlaybackState</para>
            </summary>
            <returns>Currently Playing Item Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetUserCurrentlyPlayingAsync">
            <summary>
            Get User Currently Playing
            <para>Scopes: ConnectReadPlaybackState</para>
            </summary>
            <returns>Currently Playing Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetSavedAsync(Spotify.NetStandard.Sdk.SavedType,System.String)">
            <summary>
            Get Saved
            <para>Scopes: LibraryRead</para>
            </summary>
            <param name="savedType">(Required) Saved Type</param>
            <param name="id">(Required) Spotify Item Id</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetFollowAsync(Spotify.NetStandard.Sdk.FollowType,System.String,System.String)">
            <summary>
            Get Follow
            <para>Scopes: FollowType.FollowArtist FollowType.FollowUser - FollowRead, FollowType.FollowPlaylist - PlaylistReadPrivate</para>
            </summary>
            <param name="followType">(Required) Follow Type</param>
            <param name="id">(Required) Spotify Item Id</param>
            <param name="userId">(Required) Only for FollowType.FollowPlaylist</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetAsync``1(System.String)">
            <summary>
            Get
            </summary>
            <typeparam name="TResponse">Response Type: CategoryResponse, ArtistResponse, PlaylistResponse, AlbumResponse, TrackResponse, AudioFeaturesResponse, AudioAnalysisResponse, EpisodeResponse, ShowResponse, CurrentUserResponse, UserResponse, PlaylistImageResponse, CurrentlyPlayingResponse, CurrentlyPlayingItemResponse</typeparam>
            <param name="id">Id</param>
            <returns>Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.IsPlaylistOwnedByCurrentUser(Spotify.NetStandard.Sdk.PlaylistResponse)">
            <summary>
            Is Playlist Owned by Current User?
            <para>Prerequisite: GetCurrentUser</para>
            </summary>
            <param name="playlist">Playlist Response</param>
            <returns>True if Playlist Owned, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListCategoriesAsync(Spotify.NetStandard.Sdk.CategoriesRequest)">
            <summary>
            List Categories
            </summary>
            <param name="categoriesRequest">(Optional) Categories Request</param>
            <returns>NavigationResponse of Category Responses</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListCategoriesAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.CategoryResponse})">
            <summary>
            List Categories
            </summary>
            <param name="navigationResponse">(Required) NavigationResponse of Category Responses</param>
            <returns>NavigationResponse of Category Responses</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListArtistsAsync(Spotify.NetStandard.Sdk.ArtistsRequest)">
            <summary>
            List Artists
            <para>Scopes: ArtistType.UserFollowed - FollowRead, UserFollowed.UserTop - LibraryRead</para>
            </summary>
            <param name="artistsRequest">(Required) Artists Request</param>
            <returns>Navigation Response of Artist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListArtistsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.ArtistResponse})">
            <summary>
            List Artists
            <para>Scopes: ArtistType.UserFollowed - FollowRead, UserFollowed.UserTop - LibraryRead</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Artist Response</param>
            <returns>Navigation Response of Artist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListAlbumsAsync(Spotify.NetStandard.Sdk.AlbumsRequest)">
            <summary>
            List Albums
            <para>Scopes: AlbumType.UserSaved - LibraryRead</para>
            </summary>
            <param name="albumsRequest">(Required) Albums Request</param>
            <returns>Navigation Response of Album Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListAlbumsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.AlbumResponse})">
            <summary>
            List Albums
            <para>Scopes: AlbumType.UserSaved - LibraryRead</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Album Response</param>
            <returns>Navigation Response of Album Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListTracksAsync(Spotify.NetStandard.Sdk.TracksRequest)">
            <summary>
            List Tracks
            <para>Scopes: TrackType.UserRecentlyPlayed - ListeningRecentlyPlayed, TrackType.UserSaved - LibraryRead, TrackType.UserTop - ListeningTopRead</para>
            </summary>
            <param name="tracksRequest">(Required) Tracks Request</param>
            <returns>Navigation Response of Track Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListTracksAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.TrackResponse})">
            <summary>
            List Tracks
            <para>Scopes: TrackType.UserRecentlyPlayed - ListeningRecentlyPlayed, TrackType.UserSaved - LibraryRead, TrackType.UserTop - ListeningTopRead</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Track Response</param>
            <returns>Navigation Response of Track Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListPlaylistsAsync(Spotify.NetStandard.Sdk.PlaylistsRequest)">
            <summary>
            List Playlists
            <para>Scopes: PlaylistType.User - PlaylistReadPrivate, PlaylistReadCollaborative</para>
            </summary>
            <param name="playlistsRequest">(Required) Playlists Request</param>
            <returns>Navigation Response of Playlist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListPlaylistsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.PlaylistResponse})">
            <summary>
            List Playlists
            <para>Scopes: PlaylistType.User - PlaylistReadPrivate, PlaylistReadCollaborative</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Playlist Response</param>
            <returns>Navigation Response of Playlist Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListPlaylistItemsAsync(Spotify.NetStandard.Sdk.PlaylistItemsRequest)">
            <summary>
            List Playlist Items
            </summary>
            <param name="playlistItemsRequest">(Required) Playlist Items Request</param>
            <returns>Navigation Response of Track Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListPlaylistItemsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.PlaylistItemResponse})">
            <summary>
            List Playlist Items
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Playlist Item Response</param>
            <returns>Navigation Response of Playlist Item Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListEpisodesAsync(Spotify.NetStandard.Sdk.EpisodesRequest)">
            <summary>
            List Episodes
            </summary>
            <param name="episodesRequest">(Required) Episodes Request</param>
            <returns>Navigation Response of Episode Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListEpisodesAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.EpisodeResponse})">
            <summary>
            List Episodes
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Episode Response</param>
            <returns>Navigation Response of Episode Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListShowsAsync(Spotify.NetStandard.Sdk.ShowsRequest)">
            <summary>
            List Shows
            <para>Scopes: ShowType.UserSaved - LibraryRead</para>
            </summary>
            <param name="showsRequest">(Required) Shows Request</param>
            <returns>Navigation Response of Episode Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListShowsAsync(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.ShowResponse})">
            <summary>
            List Shows
            <para>Scopes: ShowType.UserSaved - LibraryRead</para>
            </summary>
            <param name="navigationResponse">(Required) Navigation Response of Show Response</param>
            <returns>Navigation Response of Show Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListRecommendationGenresAsync">
            <summary>
            List Recommendation Genres
            </summary>
            <returns>List of Recommendation Genre Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListAudioFeaturesAsync(Spotify.NetStandard.Sdk.AudioFeaturesRequest)">
            <summary>
            List Audio Features
            </summary>
            <param name="audioFeaturesRequest">(Required) Audio Features Request</param>
            <returns>List of Audio Features Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListUserDevicesAsync">
            <summary>
            List User Devices
            <para>Scopes: ConnectReadPlaybackState</para>
            </summary>
            <returns>Navigation Response of Device Response</returns>
            <exception cref="T:Spotify.NetStandard.Sdk.AuthenticationTokenRequiredException">Thrown if AuthenticationTokenRequired Event not Subscribed to</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListSavedAsync(Spotify.NetStandard.Sdk.SavedType,System.Collections.Generic.List{System.String})">
            <summary>
            List Saved
            </summary>
            <para>Scopes: LibraryRead</para>
            <param name="savedType">(Required) Saved Type</param>
            <param name="multipleIds">(Required) SavedType.Album - Multiple Spotify Album Ids, SavedType.Track - Multiple Spotify Track Ids, SavedType.Show - Multiple Spotify Show Ids</param>
            <returns>Navigation Response of bool</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListFollowAsync(Spotify.NetStandard.Sdk.FollowType,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            List Follow
            </summary>
            <para>Scopes: FollowType.FollowArtist FollowType.FollowUser : FollowRead, FollowType.FollowPlaylist : PlaylistReadPrivate</para>
            <param name="followType">(Required) FollowType Type</param>
            <param name="multipleIds">(Required) FollowType.FollowArtist - Multiple Spotify Artist Ids, FollowType.FollowUser and FollowType.Playlist - Multiple Spotify User Ids</param>
            <param name="playlistId">(Required) Only for FollowType.FollowPlaylist</param>
            <returns>Navigation Response of bool</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListAsync``2(``0)">
            <summary>
            List
            </summary>
            <typeparam name="TRequest">Request Type: CategoriesRequest, ArtistsRequest, PlaylistsRequest, PlaylistItemsRequest, AlbumsRequest, TracksRequest, AudioFeaturesRequest, EpisodesRequest, ShowsRequest</typeparam>
            <typeparam name="TResponse">Response Type: CategoryResponse, ArtistResponse, PlaylistResponse, PlaylistItemResponse, AlbumResponse, TrackResponse, AudioFeaturesResponse, EpisodeResponse, ShowResponse, DeviceResponse, RecommendationGenreResponse</typeparam>
            <param name="request">Request</param>
            <returns>Navigation Response of Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListAsync``1(Spotify.NetStandard.Sdk.NavigationResponse{``0})">
            <summary>
            List
            </summary>
            <typeparam name="TResponse">Response Type: CategoryResponse, ArtistResponse, PlaylistResponse, PlaylistItemResponse, AlbumResponse, TrackResponse, AudioFeaturesResponse, EpisodeResponse, ShowResponse</typeparam>
            <returns>Navigation Response of Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SearchAsync(Spotify.NetStandard.Sdk.SearchRequest)">
            <summary>
            Search
            </summary>
            <param name="searchRequest">(Required) Search Request</param>
            <returns>Search Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetUserPlaybackAsync(Spotify.NetStandard.Sdk.PlaybackType,System.String,System.Nullable{System.Int32})">
            <summary>
            Set User Playback
            <para>Scopes: ConnectModifyPlaybackState</para>
            </summary>
            <param name="playbackType">(Required) Playback Type</param>
            <param name="deviceId">(Optional) Spotify Device Id</param>
            <param name="option">(Required) Only for PlaybackType.Seek - Position in milliseconds to seek to and PlaybackType.Volume - Value from 0 to 100 inclusive</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetSavedAsync(Spotify.NetStandard.Sdk.SavedType,Spotify.NetStandard.Sdk.SetType,System.Collections.Generic.List{System.String})">
            <summary>
            Set Saved
            <para>Scopes: LibraryModify</para>
            </summary>
            <param name="savedType">(Required) Saved Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="multipleIds">(Required) SavedType.Album - Multiple Spotify Album Ids, SavedType.Track - Multiple Spotify Track Ids, SavedType.Show - Multiple Spotify Show Ids</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetSavedAsync(Spotify.NetStandard.Sdk.SavedType,Spotify.NetStandard.Sdk.SetType,System.String)">
            <summary>
            Set Saved
            <para>Scopes: LibraryModify</para>
            </summary>
            <param name="savedType">(Required) Saved Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="id">(Required) Spotify Item Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetFollowAsync(Spotify.NetStandard.Sdk.FollowType,Spotify.NetStandard.Sdk.SetType,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Set Follow
            <para>Scopes: FollowModify, FollowType.Playlist and SetType.Remove - PlaylistModifyPublic or PlaylistModifyPrivate</para>
            </summary>
            <param name="followType">(Required) Follow Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="multipleIds">(Required) Only for FollowType.Artist - Multiple Spotify Artist Ids, FollowType.User - Multiple Spotify User Ids</param>
            <param name="playlistId">(Required) Only for FollowType.Playlist</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetFollowAsync(Spotify.NetStandard.Sdk.FollowType,Spotify.NetStandard.Sdk.SetType,System.String)">
            <summary>
            Set Follow
            <para>Scopes: FollowModify, FollowType.Playlist and SetType.Remove - PlaylistModifyPublic or PlaylistModifyPrivate</para>
            </summary>
            <param name="followType">(Required) Follow Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="id">(Required) FollowType.Artist - Spotify Artist Id, FollowType.User - Spotify User Id, FollowType.Playlist - Spotify Playlist Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetPlaylistAsync(Spotify.NetStandard.Sdk.SetPlaylistRequest)">
            <summary>
            Set Playlist
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="request">(Required) Set Playlist Request</param>
            <returns>Playlist Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetPlaylistItemsAsync(System.String,System.Collections.Generic.List{Spotify.NetStandard.Sdk.AddPlaylistItemRequest})">
            <summary>
            Set Playlist Items
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="addPlaylistItemRequests">(Required) The items to add in the Playlist</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetPlaylistItemAsync(System.String,Spotify.NetStandard.Sdk.PlayItemType,System.String)">
            <summary>
            Set Playlist Item
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="playItemType">Track or Episode</param>
            <param name="id">Spotify Track or Episode Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetPlaylistItemOrderAsync(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Set Playlist Item Order
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="rangeStart">(Required) Position of the first item to be reordered</param>
            <param name="insertBefore">(Required) Position where the items should be inserted. To reorder the items to the end of the playlist, simply set insertBefore to the position after the last item.</param>
            <param name="rangeLength">(Optional) Amount of items to be reordered. Defaults to 1 if not set. The range of items to be reordered begins from the rangeStart position, and includes the rangeLength subsequent items.</param>
            <param name="snapshotId">(Optional) Playlist’s snapshot ID against which you want to make the changes.</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetPlaylistImageAsync(System.String,System.Byte[])">
            <summary>
            Set Playlist Image
            <para>Scopes: ImageUserGeneratedContentUpload</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="jpegFileBytes">(Required) JPEG Image File Bytes (256Kb Max File Size)</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ToggleSavedAsync(Spotify.NetStandard.Sdk.SavedType,System.String)">
            <summary>
            Toggle Saved
            <para>Scopes: LibraryModify</para>
            </summary>
            <param name="savedType">(Required) Saved Type</param>
            <param name="id">(Required) SavedType.Album - Spotify Album Id, SavedType.Track - Spotify Track Id, SavedType.Show - Spotify Show Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ToggleFollowAsync(Spotify.NetStandard.Sdk.FollowType,System.String)">
            <summary>
            Toggle Follow
            <para>Scopes: FollowType.FollowArtist FollowType.FollowUser - FollowRead and FollowModify, FollowType.FollowPlaylist - FollowModify and PlaylistModifyPublic or PlaylistModifyPrivate</para>
            </summary>
            <param name="followType">(Required) Follow Type</param>
            <param name="id">(Required) FollowType.Artist - Spotify Artist Id, FollowType.User - Spotify User Id, FollowType.Playlist - Spotify Playlist Id</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetToggleAsync(Spotify.NetStandard.Sdk.Toggle)">
            <summary>
            Set Toggle
            </summary>
            <param name="toggle">Toggle</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetToggleAsync(Spotify.NetStandard.Sdk.ToggleType,System.String,System.Byte)">
            <summary>
            Get Toggle
            </summary>
            <param name="toggleType">Toggle Type</param>
            <param name="id">Toggle Id</param>
            <param name="itemType">Toggle Item Type</param>
            <returns>Toggle</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListTogglesAsync(Spotify.NetStandard.Sdk.ToggleType,System.Collections.Generic.List{System.String},System.String,System.Byte)">
            <summary>
            List Toggles
            </summary>
            <param name="toggleType">Toggle Type</param>
            <param name="multipleIds">Multiple Ids</param>
            <param name="playlistId">Playlist Id</param>
            <param name="itemType">Item Type</param>
            <returns>List of Toggle</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AddUserPlaybackAsync(Spotify.NetStandard.Sdk.PlaybackStartType,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Add User Playback
            <para>Scopes: ConnectModifyPlaybackState</para>
            </summary>
            <param name="playbackStartType">(Required) Playback Start Type</param>
            <param name="id">(Required) PlaybackStartType.Track - Spotify Track Id, PlaybackStartType.Episode - Spotify Episode Id, PlaybackStartType.Album - Spotify Album Id, PlaybackStartType.Artist - Spotify Artist Id, PlaybackStartType.Playlist - Spotify Playlist Id, PlaybackStartType.Show - Spotify Show Id</param>
            <param name="deviceId">(Optional) Spotify Device Id</param>
            <param name="position">(Optional) Indicates from what position to start playback. Must be a positive number. Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="offsetId">(Optional) Only for PlaybackStartType.Album, PlaybackStartType.Artist, PlaybackStartType.Playlist and PlaybackStartType.Show. Only use either Position or OffsetId. Offset Id indicates from where in the context playback should start.</param>
            <exception cref="T:System.ArgumentException">Thrown when Position and OffsetId are Provided</exception>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AddUserPlaybackQueueAsync(Spotify.NetStandard.Sdk.PlayItemType,System.String,System.String)">
            <summary>
            Add User Playback Queue
            <para>Scopes: ConnectModifyPlaybackState</para>
            </summary>
            <param name="playItemType">(Required) Track or Episode</param>
            <param name="id">(Required) PlayItemType.Track - Spotify Track Id, PlayItemType.Episode - Spotify Episode Id</param>
            <param name="deviceId">(Optional) Spotify Device Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AddPlaylistAsync(Spotify.NetStandard.Sdk.AddPlaylistRequest)">
            <summary>
            Add Playlist
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="request">Add Playlist Request (Required)</param>
            <returns>Playlist Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AddPlaylistItemsAsync(System.String,System.Collections.Generic.List{Spotify.NetStandard.Sdk.AddPlaylistItemRequest},System.Nullable{System.Int32})">
            <summary>
            Add Playlist Items
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="requests">(Required) The items to add to the playlist</param>
            <param name="position">(Optional) The position to insert the items, a zero-based index</param>
            <returns>Snapshot Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.AddPlaylistItemAsync(System.String,Spotify.NetStandard.Sdk.PlayItemType,System.String,System.Nullable{System.Int32})">
            <summary>
            Add Playlist Item
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="playItemType">(Required) Track or Episode</param>
            <param name="id">(Required) Spotify Track Id or Episode Id</param>
            <param name="position">(Optional) The positions to remove items by id, a zero-based index</param>
            <returns>Snapshot Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.RemovePlaylistItemsAsync(System.String,System.Collections.Generic.List{Spotify.NetStandard.Sdk.RemovePlaylistItemRequest},System.String)">
            <summary>
            Remove Playlist Items
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="removePlaylistItemRequests">(Required) The items to remove from the Playlist</param>
            <param name="snapshotId">(Optional) The playlist’s snapshot ID against which you want to make the changes. The API will validate that the specified tracks exist and in the specified positions and make the changes, even if more recent changes have been made to the playlist</param>
            <returns>Snapshot Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.RemovePlaylistItemAsync(System.String,Spotify.NetStandard.Sdk.PlayItemType,System.String,System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Remove Playlist Item
            <para>Scopes: PlaylistModifyPublic, PlaylistModifyPrivate</para>
            </summary>
            <param name="playlistId">(Required) Spotify Playlist Id</param>
            <param name="playItemType">(Required) Track or Episode</param>
            <param name="id">(Required) Spotify Track Id or Episode Id</param>
            <param name="positions">(Optional) The positions to remove items by id, a zero-based index</param>
            <param name="snapshotId">(Optional) The playlist’s snapshot ID against which you want to make the changes. The API will validate that the specified tracks exist and in the specified positions and make the changes, even if more recent changes have been made to the playlist</param>
            <returns>Snapshot Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.GetFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,System.String)">
            <summary>
            Get Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="id">(Required) FavouriteType.Album - Spotify Album Id, FavouriteType.Artist - Spotify Artist Id, FavouriteType.Track - Spotify Track Id, FavouriteType.Show - Spotify Show Id, FavouriteType.Episode - Spotify Episode Id</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ListFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,System.Collections.Generic.List{System.String})">
            <summary>
            List Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="multipleIds">(Required) FavouriteType.Album - Multiple Spotify Album Ids, FavouriteType.Artist - Multiple Spotify Artist Ids, FavouriteType.Track - Multiple Spotify Track Ids, FavouriteType.Show - Multiple Spotify Show Ids, FavouriteType.Episode - Multiple Spotify Episode Ids</param>
            <returns>Navigation Response of Bool</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,Spotify.NetStandard.Sdk.SetType,System.String)">
            <summary>
            Set Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="id">(Required) FavouriteType.Album - Spotify Album Id, FavouriteType.Artist - Spotify Artist Id, FavouriteType.Track - Spotify Track Id, FavouriteType.Show - Spotify Show Id, FavouriteType.Episode - Spotify Episode Id</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.SetFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,Spotify.NetStandard.Sdk.SetType,System.Collections.Generic.List{System.String})">
            <summary>
            Set Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="setType">(Required) Set Type</param>
            <param name="multipleIds">(Required) FavouriteType.Album - Multiple Spotify Album Ids, FavouriteType.Artist - Multiple Spotify Artist Ids, FavouriteType.Track - Multiple Spotify Track Ids, FavouriteType.Show - Multiple Spotify Show Ids, FavouriteType.Episode - Multiple Spotify Episode Ids</param>
            <returns>Status Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.SpotifySdkClient.ToggleFavouriteAsync(Spotify.NetStandard.Sdk.FavouriteType,System.String)">
            <summary>
            Toggle Favourite
            </summary>
            <param name="favouriteType">(Required) Favourite Type</param>
            <param name="id">(Required) FavouriteType.Album - Spotify Album Id, FavouriteType.Artist - Spotify Artist Id, FavouriteType.Track - Spotify Track Id, FavouriteType.Show - Spotify Show Id, FavouriteType.Episode - Spotify Episode Id</param>
            <returns>Bool Response</returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.Internal.AudioExtensions">
            <summary>
            Audio Extensions
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AudioExtensions.AttachGetTrackAudioAnalysis(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.TrackResponse)">
            <summary>
            Attach Audio Analysis
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Track Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AudioExtensions.AttachGetTrackAudioFeatures(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.TrackResponse)">
            <summary>
            Attach Audio Features
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Track Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AudioExtensions.AttachListTracksAudioFeatures(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.TrackResponse})">
            <summary>
            Attach List Tracks Audio Features
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Navigation Response of Track Response</param>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions">
            <summary>
            Extension Methods for Scope Class to allow fluent additions of scopes for the API
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddReadAllAccess(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Extension method to add all scopes with "read" in their scope string
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddModifyAllAccess(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Extension method to add all scopes with "modify" in their scope string
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddPlaylistAll(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Adds all scopes to a scope within the Playlist section of the defined Scopes
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddSpotifyConnectAll(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Adds all scopes to a scope within the Spotify Connect section of the defined Scopes
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddListeningHistoryAll(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Adds all scopes to a scope within the Listening History section of the defined Scopes
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddPlaybackAll(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Adds all scopes to a scope within the Playback section of the defined Scopes
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddImageAll(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Adds all scopes to a scope within the Images section of the defined Scopes
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddUsersAll(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Adds all scopes to a scope within the Users section of the defined Scopes
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddFollowAll(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Adds all scopes to a scope within the Follow section of the defined Scopes
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.AuthenticationScopeExtensions.AddLibraryAll(Spotify.NetStandard.Sdk.AuthenticationScopeRequest)">
            <summary>
            Adds all scopes to a scope within the Library section of the defined Scopes
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.Internal.CommandExtensions">
            <summary>
            Attach Command Extension Methods
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.GetConfig(System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            Get Config Value
            </summary>
            <param name="value"></param>
            <param name="overrideValue"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetCategoryCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CategoryResponse,System.Nullable{System.Boolean})">
            <summary>
            Attach Get Category Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Artist Response</param>
            <param name="overrideIsAttach">Override Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListCategoriesCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.CategoryResponse})">
            <summary>
            Attach List Categories Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="responses">Category Responses</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetArtistCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.ArtistResponse,System.Nullable{System.Boolean})">
            <summary>
            Attach Get Artist Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Artist Response</param>
            <param name="overrideIsAttach">Override Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListArtistsCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.ArtistResponse})">
            <summary>
            Attach List Artists Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="responses">Artist Responses</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetAlbumCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.AlbumResponse,System.Nullable{System.Boolean})">
            <summary>
            Attach Get Album Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Album Response</param>
            <param name="overrideIsAttach">Override Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListAlbumsCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.AlbumResponse})">
            <summary>
            Attach Albums Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="responses">Album Responses</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetTrackCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.TrackResponse,System.Nullable{System.Boolean})">
            <summary>
            Attach Get Track Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Track Response</param>
            <param name="overrideIsAttach">Override Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListTracksCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.TrackResponse})">
            <summary>
            Attach List Tracks Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="responses">Track Responses</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetPlaylistCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.PlaylistResponse,System.Nullable{System.Boolean})">
            <summary>
            Attach Get Playlist Command
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Playlist Response</param>
            <param name="overrideIsAttach">Override Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListPlaylistsCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.PlaylistResponse})">
            <summary>
            Attach List Playlist Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="responses">Playlist Responses</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetPlaylistItemCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.PlaylistItemResponse,System.Boolean)">
            <summary>
            Attach Get Playlist Item Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Playlist Item Response</param>
            <param name="isAttach">Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListPlaylistItemsCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.PlaylistItemResponse})">
            <summary>
            Attach List Playlist Items Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="responses">Playlist Responses</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetShowCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.ShowResponse,System.Nullable{System.Boolean})">
            <summary>
            Attach Get Show Commands
            </summary>
            <param name="client">Spotify SDK Client</param>
            <param name="response">Show Response</param>
            <param name="overrideIsAttach">Override Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListShowsCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.ShowResponse})">
            <summary>
            Attach List Shows Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="responses">Show Responses</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetEpisodeCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.EpisodeResponse,System.Nullable{System.Boolean})">
            <summary>
            Attach Get Episode Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Episode Response</param>
            <param name="overrideIsAttach">Override Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListEpisodesCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.EpisodeResponse})">
            <summary>
            Attach List Episode Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="responses">Episode Responses</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetCurrentUserCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentUserResponse)">
            <summary>
            Attach Get Current User Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Current User Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetUserCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.UserResponse,System.Nullable{System.Boolean})">
            <summary>
            Attach Get User Commands
            </summary>
            <param name="client">Spotify SDK Client</param>
            <param name="response">User Response</param>
            <param name="overrideIsAttach">Override Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetRecommendationGenreCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.RecommendationGenreResponse,System.Boolean)">
            <summary>
            Attach Get Recommendation Genre Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Recommendation Genre Response</param>
            <param name="isAttach">Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListRecommendationGenresCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.RecommendationGenreResponse})">
            <summary>
            Attach Recommendation Genre Commands
            </summary>
            <param name="client">Spotify SDK Client</param>
            <param name="responses">Navigation Response of Recommendation Genre Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetDeviceCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.DeviceResponse,System.Boolean)">
            <summary>
            Attach Get Device Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Device Response</param>
            <param name="isAttach">Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachListDevicesCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.DeviceResponse})">
            <summary>
            Attach List Devices Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="responses">Navigation Response of Device Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetPlaylistImageCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.PlaylistImageResponse)">
            <summary>
            Attach Get Playlist Image Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Playlist Image Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachUserCurrentlyPlayingItemCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse,System.Nullable{System.Boolean})">
            <summary>
            Attach User Currently Playing Item Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Item Response</param>
            <param name="overrideIsAttach">Override Is Attach?</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.CommandExtensions.AttachGetUserCurrentlyPlayingCommands(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Attach Get User Currently Playing Commands
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.Internal.ResponseExtensions">
            <summary>
            Response Extensions
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetFavouritesAsync``1(Spotify.NetStandard.Sdk.ISpotifySdkClient,AutoMapper.IMapper,System.Collections.Generic.List{System.String},System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Get Favourites
            </summary>
            <typeparam name="TResponse">Response Type: AlbumResponse, ArtistResponse, TrackResponse, ShowResponse, EpisodeResponse</typeparam>
            <param name="client">Spotify Sdk Client</param>
            <param name="mapper">Mapper</param>
            <param name="itemIds">Item Ids</param>
            <param name="total">Total Items</param>
            <param name="skip">Skip Items</param>
            <param name="take">Take Items</param>
            <param name="market">Market</param>
            <returns>Navigation Response of Response Type</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetTake(Spotify.NetStandard.Sdk.ISpotifySdkClient)">
            <summary>
            Get Favourite Take
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <returns>Take Value</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetLargeImage(System.Collections.Generic.IList{Spotify.NetStandard.Sdk.ImageResponse})">
            <summary>
            Large Image
            </summary>
            <param name="images"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetMediumImage(System.Collections.Generic.IList{Spotify.NetStandard.Sdk.ImageResponse})">
            <summary>
            Medium Image
            </summary>
            <param name="images"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetSmallImage(System.Collections.Generic.IList{Spotify.NetStandard.Sdk.ImageResponse})">
            <summary>
            Small Image
            </summary>
            <param name="images"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetArtist(System.Collections.Generic.IList{Spotify.NetStandard.Sdk.ArtistResponse})">
            <summary>
            Get Artist
            </summary>
            <param name="artists"></param>
            <returns>Artist</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.SetTypes``1(Spotify.NetStandard.Sdk.NavigationResponse{``0},Spotify.NetStandard.Sdk.NavigationType,System.Object)">
            <summary>
            Set Type
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="navigationResponse"></param>
            <param name="navigationType">Navigation Type</param>
            <param name="responseType">Response Type</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.AsTimeSpan(System.Int64)">
            <summary>
            As TimeSpan
            </summary>
            <param name="value">Value</param>
            <returns>TimeSpan</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.AsTimeSpanString(System.TimeSpan)">
            <summary>
            As TimeSpan String
            </summary>
            <param name="value">TimeSpan</param>
            <returns>TimeSpan String</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetReleaseYear(System.String)">
            <summary>
            Get Release Year
            </summary>
            <param name="value">Date String</param>
            <returns>Year</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetCurrentDeviceId(Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.DeviceResponse})">
            <summary>
            Get Current Device Id
            </summary>
            <param name="devicesResponse"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.AuthLookupUserAddablePlaylistsAsync(Spotify.NetStandard.Client.Interfaces.ISpotifyClient)">
            <summary>
            Lookup User Addable Playlists
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <returns>List of Simplified Playlist</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetRecommendationsAsync(Spotify.NetStandard.Client.Interfaces.ISpotifyClient,AutoMapper.IMapper,System.String,Spotify.NetStandard.Sdk.RecommendationRequest)">
            <summary>
            Get Recommendations
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="mapper">Mapper</param>
            <param name="country">Country</param>
            <param name="recommendationRequest">Recommendation Request</param>
            <returns>Navigation Response of Track Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.SetPlaylistExtended(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.PlaylistResponse)">
            <summary>
            Set Playlist Extended Properties
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Playlist Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.SetPlaylistsExtended(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.PlaylistResponse})">
            <summary>
            Sey Playlists Extended
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Navigation Response of Playlist Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.SetCurrentUserExtended(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentUserResponse)">
            <summary>
            Set Current User Extended Properties
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Current User Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.SetPlaylistImageExtended(Spotify.NetStandard.Sdk.PlaylistImageResponse,System.String)">
            <summary>
            Set Playlist Image Extended Properties
            </summary>
            <param name="response">Playlist Image Response</param>
            <param name="playlistId">Playlist Id</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.SetCurrentlyPlayingExtended(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Set Current User Extended Properties
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Current User Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetFavouritesAsync``1(Spotify.NetStandard.Sdk.ISpotifySdkClient,AutoMapper.IMapper,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Get Favourites
            </summary>
            <typeparam name="TResponse">Response Type: AlbumResponse, ArtistResponse, TrackResponse, ShowResponse, EpisodeResponse</typeparam>
            <param name="client">Spotify Sdk Client</param>
            <param name="mapper">Mapper</param>
            <param name="multipleIds">Multiple Ids</param>
            <param name="market">Market</param>
            <returns>Navigation Response of Response Type</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetFavouritesAsync``1(Spotify.NetStandard.Sdk.ISpotifySdkClient,AutoMapper.IMapper,Spotify.NetStandard.Sdk.NavigationResponse{``0},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Get Favourites
            </summary>
            <typeparam name="TResponse">Response Type: AlbumResponse, ArtistResponse, TrackResponse, ShowResponse, EpisodeResponse</typeparam>
            <param name="client">Spotify Sdk Client</param>
            <param name="mapper">Mapper</param>
            <param name="response">Navigation Response of Response Type</param>
            <param name="multipleIds">Multiple Ids</param>
            <param name="market">Market</param>
            <returns>Navigation Response of Response Type</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ResponseExtensions.GetProgressPercentage(Spotify.NetStandard.Sdk.EpisodeResponse)">
            <summary>
            Get Progress Percentage
            </summary>
            <param name="response">Episode Response</param>
            <returns>Episode Progress</returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.Internal.ToggleExtensions">
            <summary>
            Toggle Extensions
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachTracksToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,System.Collections.Generic.List{Spotify.NetStandard.Sdk.TrackResponse})">
            <summary>
            Attach Tracks Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="list">List of Track Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachEpisodesToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,System.Collections.Generic.List{Spotify.NetStandard.Sdk.EpisodeResponse})">
            <summary>
            Attach Episodes Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="list">List of Track Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachGetArtistToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.ArtistResponse)">
            <summary>
            Attach Get Artist Toggle
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Artist Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachListArtistsToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.ArtistResponse})">
            <summary>
            Attach List Artists Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Navigation Response of Artist Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachGetAlbumToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.AlbumResponse)">
            <summary>
            Attach Get Album Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Album Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachListAlbumsToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.AlbumResponse})">
            <summary>
            Attach List Albums Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Navigation Response of Album Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachGetTrackToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.TrackResponse)">
            <summary>
            Attach Get Track Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Track Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachListTracksToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.TrackResponse})">
            <summary>
            Attach List Tracks Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Navigation Response of Track Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachGetPlaylistToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.PlaylistResponse)">
            <summary>
            Attach Get Playlist Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Playlist Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachGetShowToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.ShowResponse)">
            <summary>
            Attach Get Show Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Show Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachListShowsToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.ShowResponse})">
            <summary>
            Attach List Shows Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Navigation Response of Show Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachGetEpisodeToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.EpisodeResponse)">
            <summary>
            Attach Get Episode Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Show Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachListEpisodesToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.EpisodeResponse})">
            <summary>
            Attach List Episodes Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Navigation Response of Episode Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachListPlaylistItemsToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.NavigationResponse{Spotify.NetStandard.Sdk.PlaylistItemResponse})">
            <summary>
            Attach List Playlist Item Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Navigation Response of Play Item Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.ToggleExtensions.AttachGetUserToggles(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.UserResponse)">
            <summary>
            Attach Get User Toggles
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">User Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetListFromString(System.String)">
            <summary>
            Get List from String
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPageFromLimit(System.Nullable{System.Int32})">
            <summary>
            Get Page From Limit
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPageFromNavigationRequest(Spotify.NetStandard.Sdk.NavigationRequest)">
            <summary>
            Get Page from Navigation Request
            </summary>
            <param name="navigationRequest">Navigation Request</param>
            <returns>Page</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPage(Spotify.NetStandard.Sdk.NavigationRequest,System.Nullable{System.Int32})">
            <summary>
            Get Page
            </summary>
            <param name="navigationRequest">Navigation Request</param>
            <param name="limit">Limit</param>
            <returns>Page</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetCursorFromLimit(System.Nullable{System.Int32})">
            <summary>
            Get Cursor From Limit
            </summary>
            <param name="limit">Limit</param>
            <returns>Cursor</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetCursorFromNavigationRequest(Spotify.NetStandard.Sdk.NavigationRequest)">
            <summary>
            Get Cursor from Navigation Request
            </summary>
            <param name="navigationRequest">Navigation Request</param>
            <returns>Cursor</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetCursor(Spotify.NetStandard.Sdk.NavigationRequest,System.Nullable{System.Int32})">
            <summary>
            Get Cursor
            </summary>
            <param name="navigationRequest">Navigation Request</param>
            <param name="limit">Limit</param>
            <returns>Cursor</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetUserTopTimeRange(System.Nullable{Spotify.NetStandard.Sdk.UserTopTimeRangeType})">
            <summary>
            Get User Top Time
            </summary>
            <param name="userTopTimeRangeType">User Top Time Range </param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetApiFollowType(Spotify.NetStandard.Sdk.FollowType)">
            <summary>
            Get Api Follow Type
            </summary>
            <param name="followType">Follow Type</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetSearchType(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get Search Type
            </summary>
            <param name="artist"></param>
            <param name="album"></param>
            <param name="track"></param>
            <param name="playlist"></param>
            <param name="show"></param>
            <param name="episode"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.SearchAlbums">
            <summary>
            Search Albums
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.SearchArtists">
            <summary>
            Search Artists
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.SearchTracks">
            <summary>
            Search Tracks
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.SearchPlaylists">
            <summary>
            Search Playlists
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.SearchShows">
            <summary>
            Search Shows
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.SearchEpisodes">
            <summary>
            Search Episodes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.SearchAll">
            <summary>
            Search All
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetDevicesRequest(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Devices Request
            </summary>
            <param name="deviceId">Device Id</param>
            <param name="play">True to Ensure Playback, False to maintain current Playback State</param>
            <returns>Devices Request</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetNavigationType(Spotify.NetStandard.Sdk.NavigationType)">
            <summary>
            Get Navigation Type
            </summary>
            <param name="navigationType">Navigation Type</param>
            <returns>Navigate Type</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.IsNavigationValid``1(Spotify.NetStandard.Sdk.NavigationResponse{``0},Spotify.NetStandard.Enums.NavigateType)">
            <summary>
            Is Navigation Valid
            </summary>
            <typeparam name="TResponse">Response Type</typeparam>
            <param name="navigationResponse">Navigation Response</param>
            <param name="navigateType">Navigate Type</param>
            <returns>True if Valid, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetUri(System.String,System.String)">
            <summary>
            Get Uri
            </summary>
            <param name="type">Type</param>
            <param name="id">Spotify Id</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetArtistUri(System.String)">
            <summary>
            Get Artist Uri
            </summary>
            <param name="id">Spotify Id</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetAlbumUri(System.String)">
            <summary>
            Get Album Uri
            </summary>
            <param name="id">Spotify Id</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPlaylistUri(System.String)">
            <summary>
            Get Playlist Uri
            </summary>
            <param name="id">Spotify Id</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetTrackUri(System.String)">
            <summary>
            Get Track Uri
            </summary>
            <param name="id">Spotify Id</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetEpisodeUri(System.String)">
            <summary>
            Get Episode Uri
            </summary>
            <param name="id">Spotify Id</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetShowUri(System.String)">
            <summary>
            Get Show Uri
            </summary>
            <param name="id">Spotify Id</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPlaybackStartRequest(Spotify.NetStandard.Sdk.PlaybackStartType,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Playback Start Request
            </summary>
            <param name="playbackStartType">Playlist Start Type</param>
            <param name="id">Spotify Id</param>
            <param name="position">(Optional) Indicates from what position to start playback. Must be a positive number. Passing in a position that is greater than the length of the track will cause the player to start playing the next song.</param>
            <param name="offsetId">(Optional) Only available for PlaybackStartType.Album, PlaybackStartType.Artist and PlaybackStartType.Playlist. Only use either Position or OffsetId. Offset Id indicates from where in the context playback should start.</param>
            <returns>Playback Request</returns>
            <exception cref="T:System.ArgumentException">Thrown when Position and OffsetId are Provided</exception>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPlaybackQueueUri(Spotify.NetStandard.Sdk.PlayItemType,System.String)">
            <summary>
            Get Playback Queue Uri
            </summary>
            <param name="itemType">Playlist Item Type</param>
            <param name="id">Spotify Id</param>
            <returns>String</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.ListNavigationRequests``1(Spotify.NetStandard.Sdk.NavigationResponse{``0})">
            <summary>
            List Navigation Requests
            </summary>
            <param name="navigationResponse"></param>
            <returns>List of Navigation Request</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetBoolResponse(Spotify.NetStandard.Sdk.NavigationResponse{System.Boolean})">
            <summary>
            Get Bool Response
            </summary>
            <param name="navigationResponse">Navigation Response of bool</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetBoolResponse(System.Boolean)">
            <summary>
            Get Bool Response
            </summary>
            <param name="value">Boolean Value</param>
            <returns>Bool Response</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPlaylistItemUri(Spotify.NetStandard.Sdk.PlayItemType,System.String)">
            <summary>
            Get Playlist Item Uri
            </summary>
            <param name="playItemType">Playlist Item Type</param>
            <param name="id">Item Id</param>
            <returns>Playlist Item Uri</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetUriListRequest(System.Collections.Generic.List{Spotify.NetStandard.Sdk.AddPlaylistItemRequest})">
            <summary>
            Get Uri List Request
            </summary>
            <param name="playlistItemRequests">Playlist Item Requests</param>
            <returns>UriListRequest</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetUriRequestList(Spotify.NetStandard.Sdk.PlayItemType,System.Collections.Generic.List{System.String})">
            <summary>
            Get Uri Request List
            </summary>
            <param name="itemType">Play Item Type</param>
            <param name="multipleIds">Multiple Spotify Item Ids</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPlaylistTracksRequest(System.Collections.Generic.List{Spotify.NetStandard.Sdk.RemovePlaylistItemRequest},System.String)">
            <summary>
            Get Playlist Tracks Request
            </summary>
            <param name="requests">Remove Playlist Item Requests</param>
            <param name="snapshotId">Snapshot Id</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPlaylistRequest(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Get Playlist Request
            </summary>
            <param name="name">(Required) The new name for the playlist, for example "My New Playlist Title"</param>
            <param name="description">(Optional) Value for playlist description as displayed in Spotify Clients and in the Web API</param>
            <param name="isCollaborative">(Optional) If true , the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. Note: You can only set collaborative to true on non-public playlists.</param>
            <param name="isPublic">(Optional) If true the playlist will be public, if false it will be private.</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetPlaylistReorderRequest(System.Int32,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Playlist Reorder Request
            </summary>
            <param name="rangeStart">(Required) Position of the first track to be reordered</param>
            <param name="insertBefore">(Required) Position where the tracks should be inserted. To reorder the tracks to the end of the playlist, simply set insertBefore to the position after the last track.</param>
            <param name="rangeLength">(Optional) Amount of tracks to be reordered. Defaults to 1 if not set. The range of tracks to be reordered begins from the rangeStart position, and includes the rangeLength subsequent tracks.</param>
            <param name="snapshotId">(Optional) Playlist’s snapshot ID against which you want to make the changes.</param>
            <returns>PlaylistReorderRequest</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetStatusResponse(System.Boolean)">
            <summary>
            Get Status Response
            </summary>
            <param name="success">Success</param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetBools(System.Collections.Generic.List{System.Boolean})">
            <summary>
            Get Bools
            </summary>
            <param name="values">List of Bool</param>
            <returns>Bolls Object</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.IsRepeatStateOff(System.String)">
            <summary>
            Is Repeat State Off
            </summary>
            <param name="repeatState">Repeat State</param>
            <returns>True if is, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.IsRepeatStateTrack(System.String)">
            <summary>
            Is Repeat State Track
            </summary>
            <param name="repeatState">Repeat State</param>
            <returns>True if is, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.IsRepeatStateContext(System.String)">
            <summary>
            Is Repeat State Context
            </summary>
            <param name="repeatState">Repeat State</param>
            <returns>True if is, False if Not</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetAudioKey(System.Nullable{System.Int32})">
            <summary>
            Get Audio Key
            </summary>
            <param name="value">Key Index</param>
            <returns>Audio Features Key</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetAudioPercentage(System.Nullable{System.Single})">
            <summary>
            Get Audio Percentage
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetAudioMode(System.Nullable{System.Int32})">
            <summary>
            Get Audio Mode
            </summary>
            <param name="value">Value</param>
            <returns>Major, Minor or Empty String</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetAudioMeter(System.Nullable{System.Int32})">
            <summary>
            Get Audio Meter
            </summary>
            <param name="value">Key Index</param>
            <returns>Audio Features Key</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.GetAudioValue(System.Nullable{System.Single})">
            <summary>
            Get Audio Value
            </summary>
            <param name="value">Value</param>
            <returns>Rounded Value</returns>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.Internal.Helpers.IsPremium(System.String)">
            <summary>
            Is Premium
            </summary>
            <param name="product">Product</param>
            <returns>True if is, False if Not</returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.HandlerExtensions">
            <summary>
            Handler Extensions
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.AddUserPlaybackHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.IPlaybackResponse)">
            <summary>
            Add User Playback Handler
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Playback Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.AddUserPlaybackQueueHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.IPlayItemResponse)">
            <summary>
            Add User Playback Queue Handler
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Play Item Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.TransferUserPlaybackHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.DeviceResponse)">
            <summary>
            Transfer User Playback Handler
            </summary>
            <param name="response">Device Response</param>
            <param name="client">Spotify Sdk Client</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackNextHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Skip User’s Playback To Next Track Handler 
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackPreviousHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Skip User’s Playback To Previous Track Handler
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackPauseHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Pause a User's Playback Handler
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackResumeHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Resume a User's Playback Handler
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackShuffleHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Toggle Shuffle For User’s Playback
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackRepeatHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Set Repeat Mode On User’s Playback Handler
            </summary>        
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackRepeatOffHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Set Repeat Off For User’s Playback
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackRepeatTrackHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Set Repeat Track For User’s Playback
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackRepeatContextHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,Spotify.NetStandard.Sdk.CurrentlyPlayingResponse)">
            <summary>
            Set Repeat Context For User’s Playback
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="response">Currently Playing Response</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackSeekHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,System.Int32)">
            <summary>
            Set Position for User's Playback
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="value">Seek Position</param>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.HandlerExtensions.UserPlaybackVolumeHandler(Spotify.NetStandard.Sdk.ISpotifySdkClient,System.Int32)">
            <summary>
            Set Volume For User's Playback
            </summary>
            <param name="client">Spotify Sdk Client</param>
            <param name="value">Volume Percentage</param>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.LinqExtensions">
            <summary>
            LINQ Extensions
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.LinqExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Batch
            </summary>
            <typeparam name="TSource">Source Type</typeparam>
            <param name="source">Source</param>
            <param name="size">Size</param>
            <returns>Batches</returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetCategoryCommands">
            <summary>
            Attach Get Category Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListCategoriesCommands">
            <summary>
            Attach List Categories Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetArtistCommands">
            <summary>
            Attach Get Artist Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListArtistsCommands">
            <summary>
            Attach List Artists Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetAlbumCommands">
            <summary>
            Attach Get Album Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListAlbumsCommands">
            <summary>
            Attach List Albums Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetTrackCommands">
            <summary>
            Attach Get Track Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListTracksCommands">
            <summary>
            Attach List Tracks Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetPlaylistCommands">
            <summary>
            Attach Get Playlist Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListPlaylistsCommands">
            <summary>
            Attach List Playlists Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListPlaylistItemsCommands">
            <summary>
            Attach List Playlist Items Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetShowCommands">
            <summary>
            Attach Get Show Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListShowsCommands">
            <summary>
            Attach List Shows Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetEpisodeCommands">
            <summary>
            Attach Get Episode Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListEpisodesCommands">
            <summary>
            Attach List Episodes Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetCurrentUserCommands">
            <summary>
            Attach Get Current User Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetUserCommands">
            <summary>
            Attach Get User Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListRecommendationGenreCommands">
            <summary>
            Attach List Recommendation Genre Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListDevicesCommands">
            <summary>
            Attach List Devices Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetPlaylistImageCommands">
            <summary>
            Attach Get Playlist Image Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetUserCurrentlyPlayingItemCommands">
            <summary>
            Attach Get User Currently Playing Item Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetUserCurrentlyPlayingCommands">
            <summary>
            Attach Get User Currently Playing Commands?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetArtistToggles">
            <summary>
            Attach Get Artist Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListArtistsToggles">
            <summary>
            Attach List Artists Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetAlbumToggles">
            <summary>
            Attach Get Album Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListAlbumsToggles">
            <summary>
            Attach List Albums Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetTrackToggles">
            <summary>
            Attach Get Track Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListTracksToggles">
            <summary>
            Attach List Tracks Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetPlaylistToggles">
            <summary>
            Attach Get Playlist Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetShowToggles">
            <summary>
            Attach Get Show Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListShowsToggles">
            <summary>
            Attach List Shows Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetEpisodeToggles">
            <summary>
            Attach Get Episode Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListEpisodesToggles">
            <summary>
            Attach List Episodes Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListPlaylistItemsToggles">
            <summary>
            Attach List Episodes Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetUserToggles">
            <summary>
            Attach Get User Toggles
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetTrackAudioAnalysis">
            <summary>
            Attach Get Track Audio Analysis
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachGetTrackAudioFeatures">
            <summary>
            Attach Get Track Audio Features
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Configuration.IsAttachListTracksAudioFeatures">
            <summary>
            Attach List Tracks Audio Features
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AuthenticationTokenType">
            <summary>
            Authentication Token Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AuthenticationTokenType.Access">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AuthenticationTokenType.User">
            <summary>
            User Token
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AuthenticationFlowType">
            <summary>
            Authentication Flow Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AuthenticationFlowType.AuthorisationCode">
            <summary>
            Authorisation Code Flow
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AuthenticationFlowType.AuthorisationCodeWithProofKeyForCodeExchange">
            <summary>
             Authorization Code Flow With Proof Key For Code Exchange (PKCE)
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AuthenticationFlowType.ClientCredentials">
            <summary>
            Client Credentials Flow
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AuthenticationFlowType.ImplicitGrant">
            <summary>
            Implicit Grant Flow
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.NavigationType">
            <summary>
            Navigation Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.NavigationType.Href">
            <summary>
            Href
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.NavigationType.Back">
            <summary>
            Navigate Back
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.NavigationType.Next">
            <summary>
            Navigate Next
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.UserTopTimeRangeType">
            <summary>
            User Top Time Range Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.UserTopTimeRangeType.LongTerm">
            <summary>
            Calculated from several years of data and including all new data as it becomes available
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.UserTopTimeRangeType.MediumTerm">
            <summary>
            Approximately last 6 months
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.UserTopTimeRangeType.ShortTerm">
            <summary>
            Approximately last 4 weeks
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ArtistType">
            <summary>
            Artist Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ArtistType.Favourite">
            <summary>
            Favourite Artists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ArtistType.Multiple">
            <summary>
            Multiple Artists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ArtistType.Search">
            <summary>
            Search for Artists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ArtistType.Related">
            <summary>
            Related Artists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ArtistType.UserFollowed">
            <summary>
            User's Followed Artists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ArtistType.UserTop">
            <summary>
            User's Top Artists
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AlbumType">
            <summary>
            Album Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AlbumType.Favourite">
            <summary>
            Favourite Albums
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AlbumType.Multiple">
            <summary>
            Multiple Albums
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AlbumType.Search">
            <summary>
            Search for Albums
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AlbumType.NewReleases">
            <summary>
            New Releases
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AlbumType.Artist">
            <summary>
            Artist Albums
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.AlbumType.UserSaved">
            <summary>
            User's Saved Albums
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.TrackType">
            <summary>
            Track Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.TrackType.Favourite">
            <summary>
            Favourite Tracks
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.TrackType.Multiple">
            <summary>
            Multiple Tracks
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.TrackType.Search">
            <summary>
            Search for Tracks
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.TrackType.Recommended">
            <summary>
            Get Recommendations
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.TrackType.Album">
            <summary>
            Album Tracks
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.TrackType.Artist">
            <summary>
            Artist Top Tracks
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.TrackType.UserRecentlyPlayed">
            <summary>
            User's Recently Played Tracks
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.TrackType.UserSaved">
            <summary>
            User's Saved Tracks
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.TrackType.UserTop">
            <summary>
            User's Top Tracks
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.PlaylistType">
            <summary>
            Playlist Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaylistType.Search">
            <summary>
            Search for Playlists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaylistType.Featured">
            <summary>
            Featured Playlists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaylistType.Category">
            <summary>
            Category Playlists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaylistType.User">
            <summary>
            User's Playlists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaylistType.CurrentUser">
            <summary>
            Current User's Playlists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaylistType.CurrentUserAddable">
            <summary>
            Current User's Addable Playlists
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.EpisodeType">
            <summary>
            Episode Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.EpisodeType.Favourite">
            <summary>
            Favourite Episodes
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.EpisodeType.Multiple">
            <summary>
            Multiple Episodes
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.EpisodeType.Search">
            <summary>
            Search for Episodes
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.EpisodeType.Show">
            <summary>
            Get a Show's Episodes
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ShowType">
            <summary>
            Show Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ShowType.Favourite">
            <summary>
            Favourite Shows
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ShowType.Multiple">
            <summary>
            Multiple Shows
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ShowType.Search">
            <summary>
            Search for Shows
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ShowType.UserSaved">
            <summary>
            User's Saved Shows
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.PlaybackType">
            <summary>
            Playback Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.Device">
            <summary>
            Transfer a User's Playback
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.Next">
            <summary>
            Skip User’s Playback To Next Track
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.Previous">
            <summary>
            Skip User’s Playback To Previous Track
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.Seek">
            <summary>
            Seek To Position In Currently Playing Track
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.Pause">
            <summary>
            Pause a User's Playback
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.Resume">
            <summary>
            Resume a User's Playback
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.Volume">
            <summary>
            Set Volume For User's Playback
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.RepeatTrack">
            <summary>
            Set Repeat Mode On User’s Playback as Track
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.RepeatContext">
            <summary>
            Set Repeat Mode On User’s Playback as Context
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.RepeatOff">
            <summary>
            Set Repeat Mode On User’s Playback as Off
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.ShuffleOn">
            <summary>
            Toggle Shuffle For User’s Playback as On
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackType.ShuffleOff">
            <summary>
            Toggle Shuffle For User’s Playback as Off
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.PlaybackStartType">
            <summary>
            Playback Start Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackStartType.Track">
            <summary>
            Track
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackStartType.Episode">
            <summary>
            Episode
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackStartType.Album">
            <summary>
            Album
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackStartType.Artist">
            <summary>
            Artist
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackStartType.Playlist">
            <summary>
            Playlist
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlaybackStartType.Show">
            <summary>
            Show
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.PlayItemType">
            <summary>
            Play Item Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlayItemType.Track">
            <summary>
            Track
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.PlayItemType.Episode">
            <summary>
            Episode
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SavedType">
            <summary>
            Saved Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.SavedType.Album">
            <summary>
            Album
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.SavedType.Track">
            <summary>
            Track
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.SavedType.Show">
            <summary>
            Show
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.FollowType">
            <summary>
            Follow Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.FollowType.Artist">
            <summary>
            Artist
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.FollowType.User">
            <summary>
            User
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.FollowType.Playlist">
            <summary>
            Playlist
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SetType">
            <summary>
            Set Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.SetType.Add">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.SetType.Remove">
            <summary>
            Remove
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.FavouriteType">
            <summary>
            Favourite Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.FavouriteType.Album">
            <summary>
            Favourite Albums
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.FavouriteType.Artist">
            <summary>
            Favourite Artists
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.FavouriteType.Track">
            <summary>
            Favourite Tracks
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.FavouriteType.Show">
            <summary>
            Favourite Shows
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.FavouriteType.Episode">
            <summary>
            Favourite Episodes
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ToggleType">
            <summary>
            Toggle Type
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ToggleType.Favourites">
            <summary>
            Favourites
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ToggleType.Follow">
            <summary>
            Follow
            </summary>
        </member>
        <member name="F:Spotify.NetStandard.Sdk.ToggleType.Saved">
            <summary>
            Saved
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SpotifySdkClientFactory">
            <summary>
            Spotify Sdk Client Factory
            </summary>
        </member>
        <member name="M:Spotify.NetStandard.Sdk.SpotifySdkClientFactory.CreateSpotifySdkClient(System.String,System.String,System.Uri,System.String)">
            <summary>
            Create Spotify SDK Client
            </summary>
            <param name="clientId">(Required) Spotify Client Id</param>
            <param name="clientSecret">(Optional) Spotify Client Secret</param>
            <param name="authorisationRedirectUri">(Optional) Authorisation Redirect Uri</param>
            <param name="authorisationState">(Optional) Authorisation State</param>
            <returns>Spotify SDK Client</returns>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.Toggle">
            <summary>
            Toggle
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Toggle.ToggleType">
            <summary>
            Toggle Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Toggle.ItemType">
            <summary>
            Item Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Toggle.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Toggle.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.Toggle.Command">
            <summary>
            Command
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AlbumsRequest">
            <summary>
            Albums Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumsRequest.AlbumType">
            <summary>
            Album Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumsRequest.Value">
            <summary>
            (Required) Only for AlbumType.Search - Album Search Term and AlbumType.Artist - Artist Id
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumsRequest.MultipleAlbumIds">
            <summary>
            (Required) Only for AlbumType.Multiple - Multiple Spotify Album Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumsRequest.SearchIsExternal">
            <summary>
            (Optional) Only for AlbumType.Search - If true the response will include any relevant audio content that is hosted externally
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumsRequest.IncludeGroup">
            <summary>
            (Optional) Only used for AlbumType.Artist - Filters the response. If not supplied, all album types will be returned
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumsRequest.Country">
            <summary>
            (Optional) Only for AlbumType.Search, AlbumType.NewReleases, AlbumType.Artist and AlbumType.UserSaved - Overrides Client Country as ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.IncludeGroupRequest">
            <summary>
            Include Group Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IncludeGroupRequest.Album">
            <summary>
            Album (Optional)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IncludeGroupRequest.Single">
            <summary>
            Single (Optional)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IncludeGroupRequest.AppearsOn">
            <summary>
            Appears On (Optional)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.IncludeGroupRequest.Compilation">
            <summary>
            Compliation (Optional)
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ArtistsRequest">
            <summary>
            Artists Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistsRequest.ArtistType">
            <summary>
            (Required) Artist Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistsRequest.Value">
            <summary>
            (Required) Only for ArtistType.Search - Artist Search Term and ArtistType.Related - Artist Id
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistsRequest.MultipleArtistIds">
            <summary>
            (Required) Only for ArtistType.Multiple - Multiple Artist Spotify Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistsRequest.SearchIsExternal">
            <summary>
            (Optional) Only for ArtistType.Search - If true the response will include any relevant audio content that is hosted externally.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistsRequest.UserTopTimeRangeType">
            <summary>
            (Optional) Only for ArtistType.UserTop - Long Term: calculated from several years of data and including all new data as it becomes available, Medium Term: (Default) approximately last 6 months, Short Term: approximately last 4 weeks
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistsRequest.Country">
            <summary>
            (Optional) Only for ArtistType.Search - Overrides Client Country as ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AudioFeaturesRequest">
            <summary>
            Audio Features Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesRequest.MultipleTrackIds">
            <summary>
            (Required) Multiple Track Spotify Ids
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AuthenticationScopeRequest">
            <summary>
            Authentication Scope Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.ImageUserGeneratedContentUpload">
            <summary>
            Write access to user-provided images
            <para>Required For</para>
            <para>Upload a Custom Playlist Cover Image</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.PlaylistReadPrivate">
            <summary>
            Read access to user's private playlists.
            <para>Required For</para>
            <para>Check if Users Follow a Playlist,
            Get a List of Current User's Playlists,
            Get a List of a User's Playlists</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.PlaylistModifyPrivate">
            <summary>
            Write access to a user's private playlists. 
            <para>Required For</para>
            <para>Follow a Playlist,
            Unfollow a Playlist,
            Add Tracks to a Playlist</para>
            <para>Change a Playlist's Details,
            Create a Playlist,
            Remove Tracks from a Playlist</para>
            <para>Reorder a Playlist's Tracks,
            Replace a Playlist's Tracks,
            Upload a Custom Playlist Cover Image</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.PlaylistModifyPublic">
            <summary>
            Write access to a user's public playlists. 
            <para>Required For</para>
            <para>Follow a Playlist,
            Unfollow a Playlist,
            Add Tracks to a Playlist</para>
            <para>Change a Playlist's Details,
            Create a Playlist,
            Remove Tracks from a Playlist</para>
            <para>Reorder a Playlist's Tracks,
            Replace a Playlist's Tracks,
            Upload a Custom Playlist Cover Image</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.PlaylistReadCollaborative">
            <summary>
            Include collaborative playlists when requesting a user's playlists. 
            <para>Required For</para>
            <para>Get a List of Current User's Playlists,
            Get a List of a User's Playlists</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.ConnectModifyPlaybackState">
            <summary>
            Pause a User's Playback
            <para>Required For</para>
            <para>Seek To Position In Currently Playing Track,
            Set Repeat Mode On User’s Playback,
            Set Volume For User's Playback</para>
            <para>Skip User’s Playback To Next Track,
            Skip User’s Playback To Previous Track,
            Start/Resume a User's Playback</para>
            <para>Toggle Shuffle For User’s Playback
            Transfer a User's Playback</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.ConnectReadCurrentlyPlaying">
            <summary>
            Read access to a user’s currently playing track
            <para>Required For</para>
            <para>Get the User's Currently Playing Track</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.ConnectReadPlaybackState">
            <summary>
            Read access to a user’s player state.
            <para>Required For</para>
            <para>Get a User's Available Devices,
            Get Information About The User's Current Playback,
            Get the User's Currently Playing Track</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.ListeningTopRead">
            <summary>
            Read access to a user's top artists and tracks. 
            <para>Required For</para>
            <para>Get a User's Top Artists and Tracks</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.PlaybackPositionRead">
            <summary>
            Read access to a user’s playback position in a content
            <para>Optional For</para>
            <para>Get an Episodes,
            Get Multiple Episodes, 
            Get a Show,
            Get Multiple Shows,
            Get a Show's Episodes</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.ListeningRecentlyPlayed">
            <summary>
            Read access to a user’s recently played tracks
            <para>Required For</para>
            <para>Get Current User's Recently Played Tracks</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.PlaybackAppRemoteControl">
            <summary>
            Remote control playback of Spotify.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.PlaybackStreaming">
            <summary>
            Control playback of a Spotify track. The user must have a Spotify Premium account. 
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.UserReadEmail">
            <summary>
            Read access to user’s email address. 
            <para>Required For</para>
            <para>Get Current User's Profile</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.UserReadPrivate">
            <summary>
            Read access to user’s subscription details (type of user account). 
            <para>Required For</para>
            <para>Search for an Item,
            Get Current User's Profile</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.FollowRead">
            <summary>
            Read access to the list of artists and other users that the user follows.
            <para>Required For</para>
            <para>Check if Current User Follows Artists or Users,
            Get User's Followed Artists</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.FollowModify">
            <summary>
            Write/delete access to the list of artists and other users that the user follows.
            <para>Required For</para>
            <para>Follow Artists or Users,
            Unfollow Artists or Users</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.LibraryModify">
            <summary>
            Write/delete access to a user's "Your Music" library. 
            <para>Required For</para>
            <para>Remove Albums for Current User,
            Remove User's Saved Tracks,
            Save Albums for Current User
            Save Tracks for User</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.LibraryRead">
            <summary>
            Read access to a user's "Your Music" library.  
            <para>Required For</para>
            <para>Check User's Saved Albums
            Check User's Saved Tracks,
            Get Current User's Saved Albums
            Get a User's Saved Tracks</para>
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.ReadAllAccess">
            <summary>
            Returns a new AuthorisationScopeRequest object with all "read" scopes set to true
            Usage : AuthorisationScopeRequest.ReadAllAccess
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.ModifyAllAccess">
            <summary>
            Returns a new AuthorisationScopeRequest object with all "modify" scopes set to true
            Usage : AuthorisationScopeRequest.ModifyAllAccess
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.PlaylistAll">
            <summary>
            Returns a new AuthorisationScopeRequest object with all scopes within the confines of Playlists set to true
            Usage : AuthorisationScopeRequest.PlaylistAll
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.SpotifyConnectAll">
            <summary>
            Returns a new AuthorisationScopeRequest object with all scopes within the confines of Spotify Connect set to true
            Usage : AuthorisationScopeRequest.SpotifyConnectAll
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.ListeningHistoryAll">
            <summary>
            Returns a new AuthorisationScopeRequest object with all scopes within the confines of Listening History set to true
            Usage : AuthorisationScopeRequest.ListeningHistoryAll
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.PlaybackAll">
            <summary>
            Returns a new AuthorisationScopeRequest object with all scopes within the confines of Playback set to true
            Usage : AuthorisationScopeRequest.PlaybackAll
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.UsersAll">
            <summary>
            Returns a new AuthorisationScopeRequest object with all scopes within the confines of Users set to true
            Usage : AuthorisationScopeRequest.UsersAll
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.FollowAll">
            <summary>
            Returns a new AuthorisationScopeRequest object with all scopes within the confines of Users set to true
            Usage : AuthorisationScopeRequest.FollowAll
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.LibraryAll">
            <summary>
            Returns a new AuthorisationScopeRequest object with all scopes within the confines of Library set to true
            Usage : AuthorisationScopeRequest.LibraryAll
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationScopeRequest.AllPermissions">
            <summary>
            Returns a new AuthorisationScopeRequest object with all scopes set to true
            Usage : AuthorisationScopeRequest.AllPermissions
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.BaseRequest">
            <summary>
            Base Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BaseRequest.NavigationRequest">
            <summary>
            (Optional) Navigation Request
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.CategoriesRequest">
            <summary>
            Categories Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CategoriesRequest.Country">
            <summary>
            (Optional) Overrides Client Country as ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CategoriesRequest.Locale">
            <summary>
            (Optional) Overrides Client Locale as ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.EpisodesRequest">
            <summary>
            Episodes Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodesRequest.EpisodeType">
            <summary>
            (Required) Episode Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodesRequest.Value">
            <summary>
            (Required) Only for EpisodeType.Search - Episode Search Term or EpisodeType.Show - Show Id
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodesRequest.MultipleEpisodeIds">
            <summary>
            (Required) Only for EpisodeType.Multiple - Multiple Spotify Episode Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodesRequest.SearchIsExternal">
            <summary>
            (Optional) Only for EpisodeType.Search - If true the response will include any relevant audio content that is hosted externally.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodesRequest.Country">
            <summary>
            (Optional) Overrides Client Country as ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.NavigationRequest">
            <summary>
            Navigation Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationRequest.Offset">
            <summary>
            Index of first object to return
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationRequest.Limit">
            <summary>
            Maximum number of objects to return
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AddPlaylistItemRequest">
            <summary>
            Add Playlist Item Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AddPlaylistItemRequest.PlayItemType">
            <summary>
            Track or Episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AddPlaylistItemRequest.Id">
            <summary>
            Spotify Track or Episode Id
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AddPlaylistRequest">
            <summary>
            Add Playlist Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AddPlaylistRequest.UserId">
            <summary>
            (Required) Spotify User Id
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.BasePlaylistRequest">
            <summary>
            Base Playlist Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BasePlaylistRequest.Name">
            <summary>
            (Required) The new name for the playlist, for example "My New Playlist Title"
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BasePlaylistRequest.Description">
            <summary>
            (Required) Value for playlist description as displayed in Spotify Clients and in the Web API
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BasePlaylistRequest.IsCollaborative">
            <summary>
            (Optional) If true, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. Note: You can only set collaborative to true on non-public playlists
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BasePlaylistRequest.IsPublic">
            <summary>
            (Optional) If true the playlist will be public, if false it will be private
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.PlaylistItemsRequest">
            <summary>
            Playlist Items Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemsRequest.PlaylistId">
            <summary>
            (Required) Spotify Playlist Id
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemsRequest.Fields">
            <summary>
            (Optional) Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are returned
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemsRequest.Country">
            <summary>
            (Optional) Overrides Client Country as ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.PlaylistsRequest">
            <summary>
            Playlists Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistsRequest.PlaylistType">
            <summary>
            (Required) Playlist Type 
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistsRequest.Value">
            <summary>
            (Required) Only for PlaylistType.Search - Playlist Search Term, PlaylistType.Category - Category Id, and PlaylistType.User - User Id
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistsRequest.SearchIsExternal">
            <summary>
            (Optional) Only for PlaylistType.Search, If true the response will include any relevant audio content that is hosted externally.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistsRequest.Country">
            <summary>
            (Optional) Only for PlaylistType.Search, PlaylistType.Featured and PlaylistType.Category - Overrides Client Country as ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistsRequest.Locale">
            <summary>
            (Optional) Only for PlaylistType.Featured - Override Client Locale as ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore e.g. en_GB
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.RemovePlaylistItemRequest">
            <summary>
            Remove Playlist Item Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RemovePlaylistItemRequest.Positions">
            <summary>
            Items to remove from their current positions in the playlist. Zero-indexed, that is the first item in the playlist has the value 0, the second item 1, and so on to a maximum of a 100 items
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SetPlaylistRequest">
            <summary>
            Set Playlist Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SetPlaylistRequest.PlaylistId">
            <summary>
            (Required) Spotify Playlist Id
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SearchRequest">
            <summary>
            Search Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchRequest.Query">
            <summary>
            (Required) Search Query
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchRequest.SearchTypeRequest">
            <summary>
            (Required) Search results include hits from all the specified item types
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchRequest.External">
            <summary>
            (Optional) Include any relevant audio content that is hosted externally
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchRequest.Country">
            <summary>
            (Optional) Overrides Client Country as ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SearchTypeRequest">
            <summary>
            Search Type Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchTypeRequest.Album">
            <summary>
            Album
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchTypeRequest.Artist">
            <summary>
            Artist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchTypeRequest.Playlist">
            <summary>
            Playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchTypeRequest.Track">
            <summary>
            Track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchTypeRequest.Show">
            <summary>
            Show
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchTypeRequest.Episode">
            <summary>
            Episode
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ShowsRequest">
            <summary>
            Shows Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowsRequest.ShowType">
            <summary>
            (Required) Show Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowsRequest.Value">
            <summary>
            (Required) Only for ShowType.Search - Show Search Term
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowsRequest.MultipleShowIds">
            <summary>
            (Required) Only for ShowType.Multiple - Multiple Spotify Show Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowsRequest.SearchIsExternal">
            <summary>
            (Optional) Only used for ShowType.Search - If true the response will include any relevant audio content that is hosted externally
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowsRequest.Country">
            <summary>
            (Optional) Only for ShowType.Search, ShowType.Multiple and ShowType.UserSaved - Overrides Client Country as ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.RecommendationRequest">
            <summary>
            Recommendation Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationRequest.SeedGenre">
            <summary>
            One of any genres in the set of available genres. Up to 5 seed values may be provided in any combination of seedArtists, seedTracks and seedGenres
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationRequest.SeedGenres">
            <summary>
            (Required) List of any genres in the set of available genres. Up to 5 seed values may be provided in any combination of seedArtists, seedTracks and seedGenres
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationRequest.SeedArtistIds">
            <summary>
            (Required) List of Spotify IDs for seed artists. Up to 5 seed values may be provided in any combination of seedArtists, seedTracks and seedGenres
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationRequest.SeedTrackIds">
            <summary>
            (Required) List of Spotify IDs for a seed track. Up to 5 seed values may be provided in any combination of seedArtists, seedTracks and seedGenres
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationRequest.MinimumTuneableTrack">
            <summary>
            (Optional) Multiple values. For each tunable track attribute, a hard floor on the selected track attribute’s value can be provided
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationRequest.MaximumTuneableTrack">
            <summary>
            (Optional) Multiple values. For each tunable track attribute, a hard ceiling on the selected track attribute’s value can be provided
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationRequest.TargetTuneableTrack">
            <summary>
            (Optional) Multiple values. For each of the tunable track attributes (below) a target value may be provided
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationRequest.TargetTotal">
            <summary>
            The target size of the list of recommended tracks. Default: 20. Minimum: 1. Maximum: 100
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.TuneableTrackRequest">
            <summary>
            Tuneable Track Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Acousticness">
            <summary>
            A confidence measure from 0.0 to 1.0 of whether the track is acoustic
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Danceability">
            <summary>
            Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Duration">
            <summary>
            The duration of the track in milliseconds
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Energy">
            <summary>
            Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Instrumentalness">
            <summary>
            Predicts whether a track contains no vocals
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Key">
            <summary>
            The key the track is in. Integers map to pitches using standard Pitch Class notation
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Liveness">
            <summary>
            Detects the presence of an audience in the recording
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Loudness">
            <summary>
            The overall loudness of a track in decibels (dB)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Mode">
            <summary>
            Mode indicates the modality(major or minor) of a track, the type of scale from which its melodic content is derived
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Popularity">
            <summary>
            The popularity of the track. The value will be between 0 and 100, with 100 being the most popular
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Speechiness">
            <summary>
            Speechiness detects the presence of spoken words in a track 
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Tempo">
            <summary>
            The overall estimated tempo of a track in beats per minute (BPM) 
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.TimeSignature">
            <summary>
            An estimated overall time signature of a track.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TuneableTrackRequest.Valence">
            <summary>
            A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.TracksRequest">
            <summary>
            Tracks Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TracksRequest.TrackType">
            <summary>
            (Required) Track Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TracksRequest.Value">
            <summary>
            (Required) Only for TrackType.Search - Track Search Term, TrackType.Recommended - Genre, TrackType.Album - Spotify Album Id and TrackType.Artist - Spotify Artist Id
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TracksRequest.MultipleTrackIds">
            <summary>
            (Required) Only for TrackType.Multiple - Multiple Spotify Track Ids
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TracksRequest.SearchIsExternal">
            <summary>
            (Optional) Only used for TrackType.Search - If true the response will include any relevant audio content that is hosted externally
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TracksRequest.Recommendation">
            <summary>
            (Optional) Only used for TrackType.Recommended where Value not Provided - Recommendation Request
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TracksRequest.Country">
            <summary>
            (Optional) Only used for TrackType.Search, TrackType.Album, TrackType.Artist and TrackType.UserSaved - Overrides Client Country as ISO 3166-1 alpha-2 country code e.g. GB
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AuthenticationTokenResponse">
            <summary>
            Authentication Token Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenResponse.Token">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenResponse.Refresh">
            <summary>
            Refresh
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenResponse.Expiration">
            <summary>
            Token Expiration Date
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenResponse.AuthenticationTokenType">
            <summary>
            Authentication Token Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenResponse.Scopes">
            <summary>
            Scopes
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenResponse.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenResponse.IsValid">
            <summary>
            Is Valid
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AuthenticationTokenResponse.IsLoggedIn">
            <summary>
            Is Logged In
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ActionsResponse">
            <summary>
            Actions Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ActionsResponse.Disallows">
            <summary>
            Update the user interface based on which playback actions are disallowed within the current context
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ActionsResponse.Allows">
            <summary>
            Update the user interface based on which playback actions are allowed within the current context
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AlbumResponse">
            <summary>
            Album Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.AlbumGroup">
            <summary>
            The field is present when getting an artist’s albums. Possible values are “album”, “single”, “compilation”, “appears_on”
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.AlbumType">
            <summary>
            The type of the album: one of "album", "single", or "compilation"
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Artists">
            <summary>
            The artists of the album. Each artist response includes a link in href to more detailed information about the artist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.AvailableMarkets">
            <summary>
            The markets in which the album is available: ISO 3166-1 alpha-2 country codes
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Images">
            <summary>
            The cover art for the album in various sizes, widest first
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.TotalTracks">
            <summary>
            The total number of tracks
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Copyrights">
            <summary>
            The copyright statements of the album.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.ExternalId">
            <summary>
            Known external IDs for the album.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Genres">
            <summary>
            A list of the genres used to classify the album. For example: "Prog Rock", "Post-Grunge"
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Label">
            <summary>
            The label for the album.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Popularity">
            <summary>
            The popularity of the album. The value will be between 0 and 100, with 100 being the most popular
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.ReleaseDate">
            <summary>
            The date the album was first released, for example 1981. Depending on the precision, it might be shown as 1981-12 or 1981-12-15
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.ReleaseDatePrecision">
            <summary>
            The precision with which ReleaseDate value is known: year, month, or day.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Tracks">
            <summary>
            The tracks of the album
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.AddedAt">
            <summary>
            AlbumType.UserSaved Only - The date and time the album was saved Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, ReleaseDate in an album object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.PlaybackStartType">
            <summary>
            Playback Start Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Artist">
            <summary>
            Artist Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.ReleaseDateYear">
            <summary>
            Release Date Year
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.AddUserPlaybackCommand">
            <summary>
            Start/Resume a User's Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.ToggleSaved">
            <summary>
            Toggle User's Saved Album
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AlbumResponse.ToggleFavourite">
            <summary>
            Toggle Favourite Album
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AllowsResponse">
            <summary>
            Allows Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsInterruptingPlaybackAllowed">
            <summary>
            Interrupting playback allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsPausingAllowed">
            <summary>
            Pausing allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsResumingAllowed">
            <summary>
            Resuming allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsSeekingAllowed">
            <summary>
            Seeking allowed? Will be set to false while playing an ad track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsSkippingNextAllowed">
            <summary>
            Skipping next allowed? Will be set to false while playing an ad track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsSkippingPrevAllowed">
            <summary>
            Skipping previous allowed? Will be set to false while playing an ad track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsTogglingRepeatContextAllowed">
            <summary>
            Toggling repeat context allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsTogglingShuffleAllowed">
            <summary>
            Toggling shuffle allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsTogglingRepeatTrackAllowed">
            <summary>
            Toggling repeat track allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsTransferringPlaybackAllowed">
            <summary>
            Transferring playback allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AllowsResponse.IsTogglingRepeatAllowed">
            <summary>
            Toggling repeat allowed?
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ArtistResponse">
            <summary>
            Artist Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.Followers">
            <summary>
            Information about the followers of the artist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.Genres">
            <summary>
            A list of the genres the artist is associated with. For example: "Prog Rock", "Post-Grunge"
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.Images">
            <summary>
            Images of the artist in various sizes, widest first
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.Popularity">
            <summary>
            The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.PlaybackStartType">
            <summary>
            Playback Start Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.TotalFollowers">
            <summary>
            The total number of followers.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.AddUserPlaybackCommand">
            <summary>
            Start/Resume a User's Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.ToggleFollow">
            <summary>
            Toggle Following State for Artist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ArtistResponse.ToggleFavourite">
            <summary>
            Toggle Favourite Artist
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AudioAnalysisResponse">
            <summary>
            Audio Analysis Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioAnalysisResponse.Bars">
            <summary>
            The time intervals of the bars throughout the track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioAnalysisResponse.Beats">
            <summary>
            The time intervals of beats throughout the track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioAnalysisResponse.Sections">
            <summary>
            Sections are defined by large variations in rhythm or timbre, e.g.chorus, verse, bridge, guitar solo, etc
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioAnalysisResponse.Segments">
            <summary>
            Audio segments attempts to subdivide a song into many segments, with each segment containing a roughly consitent sound throughout its duration
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioAnalysisResponse.Tatums">
            <summary>
            A tatum represents the lowest regular pulse train that a listener intuitively infers from the timing of perceived musical events
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.AudioFeaturesResponse">
            <summary>
            Audio Features Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Acousticness">
            <summary>
            A confidence measure from 0.0 to 1.0 of whether the track is acoustic
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.AnalysisUrl">
            <summary>
            An HTTP URL to access the full audio analysis of this track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Danceability">
            <summary>
            Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Duration">
            <summary>
            The duration of the track in milliseconds
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Energy">
            <summary>
            Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Instrumentalness">
            <summary>
            Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Key">
            <summary>
            The key the track is in. Integers map to pitches using standard Pitch Class notation.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Liveness">
            <summary>
            Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Loudness">
            <summary>
            The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Mode">
            <summary>
            Mode indicates the modality(major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Speechiness">
            <summary>
            Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Tempo">
            <summary>
            The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration 
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.TimeSignature">
            <summary>
            An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.TrackHref">
            <summary>
            A link to the Web API endpoint providing full details of the track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.Valence">
            <summary>
            A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.AcousticPercentage">
            <summary>
            A confidence percentage from 0% to 100% of whether the track is acoustic
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.DanceablePercentage">
            <summary>
            Danceability percentage described how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0 is least danceable and 100% is most danceable
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.EnergyPercentage">
            <summary>
            Energy percentage from 0% to 100% represents a perceptual measure of intensity and activity
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.InstrumentalPercentage">
            <summary>
            Instrumental precentage predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 100%, the greater likelihood the track contains no vocal content. Values above 50% are intended to represent instrumental tracks, but confidence is higher as the value approaches 100%
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.KeyString">
            <summary>
            The key the track is in using standard Pitch Class notation of C, C♯, D, D♯, E, F, F♯, G, G♯, A, A♯ or B
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.LivePercentage">
            <summary>
            Live precentage detects the presence of an audience in the recording. Higher liveness percentage represent an increased probability that the track was performed live. A value above 80% provides strong likelihood that the track is live
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.SpeechPercentage">
            <summary>
            Speechiness percentage detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 100% the attribute value. Values above 60% percent describe tracks that are probably made entirely of spoken words. Values between 33% and 66% describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 33% most likely represent music and other non-speech-like tracks
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.ValencePercentage">
            <summary>
            Valence percentage from 0% to 100% describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.LoudnessValue">
            <summary>
            The overall rounded loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.TempoValue">
            <summary>
            The overall estimated rounded tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.ModeString">
            <summary>
            Mode indicates the modality of a track, the type of scale from which its melodic content is derived of which can be Major, Minor or none
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.AudioFeaturesResponse.MeterString">
            <summary>
            Meter is the estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure) of 3/4, 4/4, 5/4, 6/4 and 7/4
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.BaseContentResponse">
            <summary>
            Base Content Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BaseContentResponse.Id">
            <summary>
            The base-62 identifier that you can find at the end of the Spotify URI for the object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BaseContentResponse.Name">
            <summary>
            The name of the content
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BaseContentResponse.Command">
            <summary>
            Command
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.BaseResponse">
            <summary>
            Base Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BaseResponse.Error">
            <summary>
            Error Object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BaseResponse.IsSuccess">
            <summary>
            Is Success
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.BoolResponse">
            <summary>
            Bool Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.BoolResponse.Value">
            <summary>
            Response Value
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.CategoryResponse">
            <summary>
            Category Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CategoryResponse.Images">
            <summary>
            The category icon, in various sizes
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CategoryResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CategoryResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CategoryResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ContextResponse">
            <summary>
            Context Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ContextResponse.Type">
            <summary>
            The object type of the object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ContextResponse.Href">
            <summary>
            A link to the Web API endpoint providing full details of the object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ContextResponse.ExternalUrls">
            <summary>
            Known external URLs for this object
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ContextResponse.Uri">
            <summary>
            The Spotify URI for the object
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.CopyrightResponse">
            <summary>
            Copyright Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CopyrightResponse.Text">
            <summary>
            The copyright text for this album
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CopyrightResponse.Type">
            <summary>
            The type of copyright: C = the copyright, P = the sound recording (performance) copyright
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse">
            <summary>
            Currently Playing Item Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.Context">
            <summary>
            A Context Object. Can be null
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.TimeStamp">
            <summary>
            Unix Millisecond Timestamp when data was fetched
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.Progress">
            <summary>
            Progress into the currently playing track or episode. Can be null.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.IsPlaying">
            <summary>
            If something is currently playing, return true.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.Track">
            <summary>
            The currently playing track. Can be null.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.Episode">
            <summary>
            The currently playing episode. Can be null.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.Type">
            <summary>
            The object type of the currently playing item. Can be one of track, episode, ad or unknown.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.Actions">
            <summary>
            Allows to update the user interface based on which playback actions are available within the current context
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.HasContext">
            <summary>
            Has Context?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.Current">
            <summary>
            The currently playing item, Track or Episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.PlayItemType">
            <summary>
            Play Item Type of Track or Episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.HasProgress">
            <summary>
            Has Progress
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.Duration">
            <summary>
            Duration
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.DurationTimeSpan">
            <summary>
            Duration Timespan
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.ProgressTimeSpan">
            <summary>
            Progress TimeSpan
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.UserPlaybackNextCommand">
            <summary>
            Skip User’s Playback To Next Track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.UserPlaybackPreviousCommand">
            <summary>
            Skip User’s Playback To Previous Track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.UserPlaybackPauseCommand">
            <summary>
            Pause a User's Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingItemResponse.UserPlaybackResumeCommand">
            <summary>
            Resume a User's Playback
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse">
            <summary>
            Currently Playing Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.Device">
            <summary>
            The device that is currently active
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.RepeatState">
            <summary>
            The repeat state: off, track, context
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.ShuffleState">
            <summary>
            If shuffle is on or off
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.HasDevice">
            <summary>
            Has Device?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.HasVolume">
            <summary>
            Has Volume?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.IsRepeatStateOff">
            <summary>
            Is Repeat State Off?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.IsRepeatStateTrack">
            <summary>
            Is Repeat State Track?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.IsRepeatStateContext">
            <summary>
            Is Repeat State Context?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.UserPlaybackShuffleCommand">
            <summary>
            Toggle Shuffle For User’s Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.UserPlaybackRepeatCommand">
            <summary>
            Set Repeat Mode On User’s Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.UserPlaybackRepeatOffCommand">
            <summary>
            Set Repeat Off For User’s Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.UserPlaybackRepeatTrackCommand">
            <summary>
            Set Repeat Off For User’s Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.UserPlaybackRepeatContextCommand">
            <summary>
            Set Repeat Context For User’s Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.UserPlaybackSeekCommand">
            <summary>
            Set Seek for User's Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentlyPlayingResponse.UserPlaybackVolumeCommand">
            <summary>
            Set Volume for User's Playback
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.CurrentUserResponse">
            <summary>
            Current User Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentUserResponse.Country">
            <summary>
            The country of the user, as set in the user’s account profile. An ISO 3166-1 alpha-2 country code.This field is only available when the current user has granted access to the UserReadPrivate scope
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentUserResponse.Email">
            <summary>
            The user’s email address, as entered by the user when creating their account. his field is only available when the current user has granted access to the UserReadEmail scope
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentUserResponse.Product">
            <summary>
            The user’s Spotify subscription level: “premium”, “free”, etc. This field is only available when the current user has granted access to the UserReadPrivate scope
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.CurrentUserResponse.IsPremium">
            <summary>
            Is Premium Subscription?
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.DeviceResponse">
            <summary>
            Device Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DeviceResponse.Id">
            <summary>
            The device Id. This may be null
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DeviceResponse.IsActive">
            <summary>
            If this device is the currently active device
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DeviceResponse.IsPrivateSession">
            <summary>
            If this device is currently in a private session
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DeviceResponse.IsRestricted">
            <summary>
            Whether controlling this device is restricted. If true then no commands will be accepted by this device
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DeviceResponse.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DeviceResponse.Type">
            <summary>
            Device type, such as “computer”, “smartphone” or “speaker”
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DeviceResponse.Volume">
            <summary>
            The current volume in percent This may be null
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DeviceResponse.TransferUserPlaybackCommand">
            <summary>
            Transfer a User's Playback
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.DisallowsResponse">
            <summary>
            Disallows Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsInterruptingPlaybackNotAllowed">
            <summary>
            Interrupting playback not allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsPausingNotAllowed">
            <summary>
            Pausing not allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsResumingNotAllowed">
            <summary>
            Resuming not allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsSeekingNotAllowed">
            <summary>
            Seeking not allowed? Will be set to true while playing an ad track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsSkippingNextNotAllowed">
            <summary>
            Skipping next not allowed? Will be set to true while playing an ad track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsSkippingPrevNotAllowed">
            <summary>
            Skipping previous not allowed? Will be set to true while playing an ad track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsTogglingRepeatContextNotAllowed">
            <summary>
            Toggling repeat context not allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsTogglingShuffleNotAllowed">
            <summary>
            Toggling shuffle not allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsTogglingRepeatTrackNotAllowed">
            <summary>
            Toggling repeat track not allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsTransferringPlaybackNotAllowed">
            <summary>
            Transferring playback not allowed?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.DisallowsResponse.IsTogglingRepeatNotAllowed">
            <summary>
            Toggling repeat not allowed?
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.EpisodeResponse">
            <summary>
            Episode Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Preview">
            <summary>
            A URL to a 30 second preview (MP3 format) of the episode - null if not available
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Description">
            <summary>
            The description of the episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Duration">
            <summary>
            The episode length in milliseconds
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.IsExplicit">
            <summary>
            Whether or not the episode has explicit content ( true = yes it does; false = no it does not OR unknown)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Images">
            <summary>
            The cover art for the episode in various sizes, widest first
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.IsExternallyHosted">
            <summary>
            True if the episode is hosted outside of Spotify's CDN
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.IsPlayable">
            <summary>
            True if the episode is playable in the given market. Otherwise false
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Languages">
            <summary>
            A list of the languages used in the episode, identified by their ISO 639 code
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.ReleaseDate">
            <summary>
            The date the episode was first released, for example 1981-12-15. Depending on the precision, it might be shown as 1981 or 1981-12
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.ReleaseDatePrecision">
            <summary>
            The precision with which ReleaseDate value is known: year, month, or day
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.ResumePoint">
            <summary>
            The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope user-read-playback-position
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Show">
            <summary>
            The show on which the episode belongs.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.PlaybackStartType">
            <summary>
            Playback Start Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.PlayItemType">
            <summary>
            Play Item Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.DurationTimeSpan">
            <summary>
            Duration Timespan
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.Length">
            <summary>
            Episode Length
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.HasProgress">
            <summary>
            Has Progress?
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.ProgressPercentage">
            <summary>
            Episode Played Progress Percentage
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.AddUserPlaybackCommand">
            <summary>
            Start/Resume a User's Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.AddUserPlaybackQueueCommand">
            <summary>
            Add an item to the end of the user's current playback queue
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.AddPlaylistItemCommand">
            <summary>
            Add Item to a Playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.EpisodeResponse.ToggleFavourite">
            <summary>
            Toggle Favourite Episode
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ErrorResponse">
            <summary>
            Error Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ErrorResponse.StatusCode">
            <summary>
            The HTTP status code
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ErrorResponse.Message">
            <summary>
            A short description of the cause of the error
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ExternalIdResponse">
            <summary>
            External Id Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ExternalIdResponse.Isrc">
            <summary>
            International Standard Recording Code
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ExternalIdResponse.Ean">
            <summary>
            International Article Number
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ExternalIdResponse.Upc">
            <summary>
            Universal Product Code
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ExternalUrlResponse">
            <summary>
            External Url Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ExternalUrlResponse.Spotify">
            <summary>
            An external, public URL to the object
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.FavouriteResponse">
            <summary>
            Favourite Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.FavouriteResponse.Albums">
            <summary>
            Albums
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.FavouriteResponse.Artists">
            <summary>
            Artist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.FavouriteResponse.Tracks">
            <summary>
            Track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.FavouriteResponse.Shows">
            <summary>
            Show
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.FavouriteResponse.Episodes">
            <summary>
            Episode
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.FollowersResponse">
            <summary>
            Followers Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.FollowersResponse.Href">
            <summary>
            A link to the Web API endpoint providing full details of the followers; null if not available
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.FollowersResponse.Total">
            <summary>
            The total number of followers
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ImageResponse">
            <summary>
            Image Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ImageResponse.Height">
            <summary>
            The image height in pixels. If unknown: null or not returned
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ImageResponse.Url">
            <summary>
            The source URL of the image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ImageResponse.Width">
            <summary>
            The image width in pixels. If unknown: null or not returned
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.LinkedTrackResponse">
            <summary>
            Linked Track Response
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.NavigationResponse`1">
            <summary>
            Navigation Response
            </summary>
            <typeparam name="TResponse">Response Type</typeparam>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.NavigationType">
            <summary>
            Navigation Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.Href">
            <summary>
            Href
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.Total">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.Back">
            <summary>
            Back Link
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.Next">
            <summary>
            Next Link
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.Items">
            <summary>
            Items
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.NavigationResponse`1.NavigationRequests">
            <summary>
            Navigation Requests
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.PlaylistImageResponse">
            <summary>
            Playlist Image Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistImageResponse.Images">
            <summary>
            Images in various sizes, if available
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistImageResponse.Id">
            <summary>
            Playlist Id
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistImageResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistImageResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistImageResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistImageResponse.Command">
            <summary>
            Command
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.PlaylistItemResponse">
            <summary>
            Playlist Item Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemResponse.AddedAt">
            <summary>
            The date and time the Track or Episode was added
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemResponse.AddedBy">
            <summary>
            The Spotify user who added the Track or Episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemResponse.IsLocal">
            <summary>
            Whether this track is a local file or not.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemResponse.Track">
            <summary>
            Information about the Track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemResponse.Episode">
            <summary>
            Information about the Episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemResponse.Current">
            <summary>
            Play Item Response of Current Track or Episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemResponse.PlayItemType">
            <summary>
            Play Item Type of Track or Episode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistItemResponse.RemovePlaylistItemCommand">
            <summary>
            Remove Items from a Playlist
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.PlaylistResponse">
            <summary>
            Playlist Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Collaborative">
            <summary>
            Returns true if the owner allows other users to modify the playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Images">
            <summary>
            Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Owner">
            <summary>
            The user who owns the playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Public">
            <summary>
            The playlist's public/private status: true the playlist is public, false the playlist is private, null the playlist status is not relevant
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.SnapshotId">
            <summary>
            The version identifier for the current playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Tracks">
            <summary>
            Information about the items of the playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Description">
            <summary>
            The playlist description. Only returned for modified, verified playlists, otherwise null
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Followers">
            <summary>
            Information about the followers of the playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.PlaybackStartType">
            <summary>
            Playback Start Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.TotalFollowers">
            <summary>
            The total number of followers
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.IsOwnPlaylist">
            <summary>
            Is Own Playlist, Requires Current User
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.IsEditable">
            <summary>
            Is Editable, Requires Current User
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.AddUserPlaybackCommand">
            <summary>
            Start/Resume a User's Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.SetPlaylistImageCommand">
            <summary>
            Is Own Playlist Only - Upload a Custom Playlist Cover Image -
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.SetPlaylistCommand">
            <summary>
            Is Own Playlist Only - Change a Playlist's Details
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.PlaylistResponse.ToggleFollow">
            <summary>
            Get Playlist Only - Toggle Following State for Playlist
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.RecommendationGenreResponse">
            <summary>
            Available Recommendation Genre Seed Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationGenreResponse.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationGenreResponse.Command">
            <summary>
            Command
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.RecommendationSeedResponse">
            <summary>
            Recommendation Seed Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationSeedResponse.AfterFilteringSize">
            <summary>
            The number of tracks available after min_* and max_* filters have been applied
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationSeedResponse.AfterRelinkingSize">
            <summary>
            The number of tracks available after relinking for regional availability
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.RecommendationSeedResponse.InitialPoolSize">
            <summary>
            The number of recommended tracks available for this seed
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ResumePointResponse">
            <summary>
            Resume Point Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResumePointResponse.FullyPlayed">
            <summary>
            Whether or not the episode has been fully played by the user
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ResumePointResponse.ResumePosition">
            <summary>
            The user’s most recent position in the episode in milliseconds
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SearchResponse">
            <summary>
            Search Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchResponse.Albums">
            <summary>
            Albums
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchResponse.Artists">
            <summary>
            Artist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchResponse.Playlists">
            <summary>
            Playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchResponse.Tracks">
            <summary>
            Track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchResponse.Shows">
            <summary>
            Show
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SearchResponse.Episodes">
            <summary>
            Episode
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SectionResponse">
            <summary>
            Section Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.Loudness">
            <summary>
            The overall loudness of the section in decibels (dB)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.Tempo">
            <summary>
            The overall estimated tempo of the section in beats per minute (BPM)  
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.TempoConfidence">
            <summary>
            The confidence, from 0.0 to 1.0, of the reliability of the tempo
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.Key">
            <summary>
            The estimated overall key of the section. The values in this field ranging from 0 to 11 mapping to pitches using standard Pitch Class notation
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.KeyConfidence">
            <summary>
            The confidence, from 0.0 to 1.0, of the reliability of the key
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.Mode">
            <summary>
            Indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived.This field will contain a 0 for “minor”, a 1 for “major”, or a -1 for no result
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.ModeConfidence">
            <summary>
            The confidence, from 0.0 to 1.0, of the reliability of the mode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.TimeSignature">
            <summary>
            An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure). The time signature ranges from 3 to 7 indicating time signatures of “3/4”, to “7/4”
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.TimeSignatureConfidence">
            <summary>
            The confidence, from 0.0 to 1.0, of the reliability of the time_signature
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.LoudnessValue">
            <summary>
            The overall rounded loudness of the section in decibels (dB)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.TempoValue">
            <summary>
            The overall estimated rounded tempo of the section in beats per minute (BPM) 
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.TempoConfidencePercentage">
            <summary>
            The confidence percentage, from 0% to 100%, of the reliability of the tempo
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.KeyString">
            <summary>
            The estimated overall key of the section. The values in this field using standard Pitch Class notation of C, C♯, D, D♯, E, F, F♯, G, G♯, A, A♯ or B
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.KeyConfidencePercentage">
            <summary>
            The confidence percentage, from 0% to 100%, of the reliability of the key
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.ModeString">
            <summary>
            Indicates the modality of a track, the type of scale from which its melodic content is derived which can be Major, Minor or Empty String
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.ModePercentage">
            <summary>
            The confidence percentage, from 0% to 100%, of the reliability of the mode
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.MeterString">
            <summary>
            Meter is the estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure) of 3/4, 4/4, 5/4, 6/4 and 7/4
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SectionResponse.TimeSignatureConfidencePercentage">
            <summary>
            The confidence percentage, from 0% to 100%, of the reliability of the Time Signature
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SegmentResponse">
            <summary>
            Segment Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SegmentResponse.LoudnessStart">
            <summary>
            The onset loudness of the segment in decibels (dB)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SegmentResponse.LoudnessMax">
            <summary>
            The peak loudness of the segment in decibels (dB)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SegmentResponse.LoudnessMaxTime">
            <summary>
            The segment-relative offset of the segment peak loudness in seconds 
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SegmentResponse.LoudnessEnd">
            <summary>
            The offset loudness of the segment in decibels (dB)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SegmentResponse.Pitches">
            <summary>
            A “chroma” vector representing the pitch content of the segment, corresponding to the 12 pitch classes C, C#, D to B, with values ranging from 0 to 1 that describe the relative dominance of every pitch in the chromatic scale
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SegmentResponse.Timbre">
            <summary>
            Timbre is the quality of a musical note or sound that distinguishes different types of musical instruments, or voices
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.ShowResponse">
            <summary>
            Show Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.AvailableMarkets">
            <summary>
            A list of the countries in which the show can be played, identified by their ISO 3166-1 alpha-2 code
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.Copyrights">
            <summary>
            The copyright statements of the show
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.Description">
            <summary>
            A description of the show
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.IsExplicit">
            <summary>
            Whether or not the show has explicit content ( true = yes it does; false = no it does not OR unknown)
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.Images">
            <summary>
            The cover art for the show in various sizes, widest first
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.IsExternallyHosted">
            <summary>
            True if all of the show's episodes are hosted outside of Spotify’s CDN
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.Languages">
            <summary>
            A list of the languages used in the show, identified by their ISO 639 code
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.MediaType">
            <summary>
            The media type of the show
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.Publisher">
            <summary>
            The publisher of the show
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.Episodes">
            <summary>
            A list of the show’s episodes.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.AddedAt">
            <summary>
            ShowType.UserSaved Only - The date and time the show was saved. Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an show release), an additional field indicates the precision; see for example, ReleaseDate in a show object.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.PlaybackStartType">
            <summary>
            Playback Start Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.AddUserPlaybackCommand">
            <summary>
            Start/Resume a User's Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.ToggleSaved">
            <summary>
            Toggle User's Saved Show
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.ShowResponse.ToggleFavourite">
            <summary>
            Toggle Favourite Show
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.SnapshotResponse">
            <summary>
            Snapshot Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.SnapshotResponse.SnapshotId">
            <summary>
            Can be used to identify playlist version in future requests
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.StatusResponse">
            <summary>
            Status Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.StatusResponse.StatusCode">
            <summary>
            Status Code
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.StatusResponse.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.StatusResponse.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.TimeIntervalResponse">
            <summary>
            Time Interval Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TimeIntervalResponse.Start">
            <summary>
            The starting point in seconds
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TimeIntervalResponse.Duration">
            <summary>
            The duration in seconds
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TimeIntervalResponse.Confidence">
            <summary>
            The reliability confidence, from 0.0 to 1.0
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TimeIntervalResponse.ConfidencePercentage">
            <summary>
            The reliability confidence percentage, from 0 to 100%
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.TrackResponse">
            <summary>
            Track Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Artists">
            <summary>
            The artists who performed the track. Each artist object includes a link in href to more detailed information about the artist.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.AvailableMarkets">
            <summary>
            A list of the countries in which the track can be played, identified by their ISO 3166-1 alpha-2 code.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.DiscNumber">
            <summary>
            The disc number (usually 1 unless the album consists of more than one disc).
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Duration">
            <summary>
            The track length in milliseconds.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.IsExplicit">
            <summary>
            Whether or not the track has explicit lyrics ( true = yes it does; false = no it does not OR unknown).
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.IsPlayable">
            <summary>
            Part of the response when Track Relinking is applied. If true , the track is playable in the given market. Otherwise false.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.LinkedFrom">
            <summary>
            Part of the response when Track Relinking is applied and is only part of the response if the track linking, in fact, exists
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Restrictions">
            <summary>
            Part of the response when Track Relinking is applied, the original track is not available in the given market
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Preview">
            <summary>
            A link to a 30 second preview (MP3 format) of the track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.TrackNumber">
            <summary>
            The number of the track. If an album has several discs, the track number is the number on the specified disc
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.IsLocal">
            <summary>
            Whether or not the track is from a local file
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Album">
            <summary>
            The album on which the track appears. The album object includes a link in href to full information about the album
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.ExternalId">
            <summary>
            Known external IDs for the track.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Popularity">
            <summary>
            The popularity of the track. The value will be between 0 and 100, with 100 being the most popular
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.AddedAt">
            <summary>
            TrackType.UserSaved Only - The date and time the track was saved. Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.PlayedAt">
            <summary>
            TrackType.UserRecentlyPlayed Only - The date and time the track was played. Format yyyy-MM-ddTHH:mm:ss
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Context">
            <summary>
            TrackType.UserRecentlyPlayed Only - The context the track was played from
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Seeds">
            <summary>
            TrackType.Recommended Only - An array of recommendation seed objects
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.PlaybackStartType">
            <summary>
            Playback Start Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.PlayItemType">
            <summary>
            Play Item Type
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Artist">
            <summary>
            Artist Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Images">
            <summary>
            Images in various sizes, if available
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.DurationTimeSpan">
            <summary>
            Duration Timespan
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.Length">
            <summary>
            Track Length
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.AudioFeatures">
            <summary>
            Audio Features for Track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.AudioAnalysis">
            <summary>
            Audio Analysis for Track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.AddUserPlaybackCommand">
            <summary>
            Start/Resume a User's Playback
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.AddUserPlaybackQueueCommand">
            <summary>
            Add an item to the end of the user's current playback queue
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.AddPlaylistItemCommand">
            <summary>
            Add Item to a Playlist
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.GetAudioAnalysisCommand">
            <summary>
            Get Audio Analysis for a Track Command
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.GetAudioFeaturesCommand">
            <summary>
            Get Audio Features for a Track Command
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.ToggleSaved">
            <summary>
            Toggle User's Saved Track
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackResponse.ToggleFavourite">
            <summary>
            Toggle Favourite Track
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.TrackRestrictionResponse">
            <summary>
            Track Restriction Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.TrackRestrictionResponse.Reason">
            <summary>
            Contains the reason why the track is not available e.g. market
            </summary>
        </member>
        <member name="T:Spotify.NetStandard.Sdk.UserResponse">
            <summary>
            User Response
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.UserResponse.DisplayName">
            <summary>
            The name displayed on the user’s profile. null if not available.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.UserResponse.Images">
            <summary>
            The user’s profile image.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.UserResponse.Followers">
            <summary>
            Information about the followers of this user.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.UserResponse.TotalFollowers">
            <summary>
            The total number of followers.
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.UserResponse.Large">
            <summary>
            Large Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.UserResponse.Medium">
            <summary>
            Medium Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.UserResponse.Small">
            <summary>
            Small Image
            </summary>
        </member>
        <member name="P:Spotify.NetStandard.Sdk.UserResponse.ToggleFollow">
            <summary>
            Toggle Following State for User
            </summary>
        </member>
    </members>
</doc>
